@inproceedings{20155101691349,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Reverse Tracer: A software tool for generating realistic performance test programs},
journal = {Proceedings - International Symposium on High-Performance Computer Architecture},
author = {Sakamoto, M. and Brisson, L. and Katsuno, A. and Inoue, A. and Kimura, Y.},
volume = {2002-January},
year = {2002},
pages = {81 - 91},
issn = {15300897},
address = {Cambridge, MA, United states},
abstract = {During the development of high-performance processors, software performance models are used to obtain performance estimates. These models are not cycle-accurate, so their results can have significant errors, leading to performance surprises after the hardware is built. Some performance tests can run directly on the logic simulators, to get more accurate results, but those simulators cannot run large interactive workloads with I/O and much operating system code. So the accurate performance estimates from logic simulators are only available for application code, and are not adequate for the evaluation of powerful server systems that are primarily intended to run large interactive workloads. We discuss a software tool system, the "Reverse Tracer", that generates executable performance tests from an instruction trace of the workload. The generated performance tests retain the essential performance characteristics of multi-user I/O-intensive workloads without doing any real I/O, so they can run in logic simulation to measure performance accurately before the hardware is built.<br/> &copy; 2002 IEEE.},
key = {Software testing},
keywords = {Computer aided software engineering;Computer architecture;Computer circuits;Embedded systems;Hardware;Simulators;Supercomputers;},
note = {Accurate performance;Application codes;Cycle accurate;High performance processors;Logic simulations;Performance characteristics;Performance tests;Software performance models;},
URL = {http://dx.doi.org/10.1109/HPCA.2002.995700},
} 


@inproceedings{20110413611893,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Proposal of automated performance testing tool for vital software in train control system},
journal = {ICCAS 2010 - International Conference on Control, Automation and Systems},
author = {Jo, Hyun-Jeong and Hwang, Jong-Gyu and Lee, Kang-Mi},
year = {2010},
pages = {1151 - 1155},
abstract = {In accordance with the development of recent computer technology, the dependency of train control system on the computer software is being increased further, and accordingly, the testing for the safety and reliability of train control system software became more important. Hence, the safety assurance of the vital software running on the train control system is very critical task and yet, not many works have been done. While much efforts have been reported to improve electronic hardware's safety, not so much systematic approaches to evaluate software's safety. In this paper, we suggested an automated tool for performance testing in train control system, and presented its result of implementation. The testing items in the implemented tool had referred to the international standards in relation to the software for train control system, such as IEC 61508 and IEC 62279. In these international standards, 'performance testing' for train control system S/W has to be recommended highly. &copy;ICROS.<br/>},
key = {Computer control systems},
keywords = {Automation;Computer control;Computer software selection and evaluation;Safety testing;Software reliability;Software testing;Vehicle performance;},
note = {Automated tools;Computer technology;Electronic hardwares;International standards;Performance testing;Safety assurance;Software safety;Train control systems;},
} 


@inproceedings{20153001060092,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Analysis and design of selenium webdriver automation testing framework},
journal = {Procedia Computer Science},
author = {Gojare, Satish and Joshi, Rahul and Gaigaware, Dhanashree},
volume = {50},
year = {2015},
pages = {341 - 346},
issn = {18770509},
address = {Chennai, India},
abstract = {Nowadays, number of software system has been implemented as web-based applications. These web applications are very complex. It is very difficult to test such complex web applications. Automation testing uses automation tools to reduce human intervention and repeatable tasks. In this paper we have designed and implemented automation testing framework for testing web applications. This new automation testing framework has been implemented using selenium WebDriver tool. Using this framework tester can easily write their test cases efficiently and in less time. Tester need not to study the selenium webdriver tool in detail. This framework is helpful to developer to analyze their code due to screen shot property of framework. This framework produces the customized test report to tester. It is very easy to maintain and repair the test suite for new release of the application using this framework.<br/> &copy; 2015 The Authors. Published by Elsevier B.V.},
key = {Big data},
keywords = {Application programs;Automation;Selenium;},
note = {Automation testing;Automation tools;Human intervention;Software systems;Test reports;Test suites;WEB application;Web-based applications;},
URL = {http://dx.doi.org/10.1016/j.procs.2015.04.038},
} 


@inproceedings{20174104268960,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Based on the analysis of mobile terminal application software performance test},
journal = {Proceedings - 18th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2017},
author = {Chunye, Du and Wei, Song and Jianhua, Wu},
year = {2017},
pages = {391 - 394},
address = {Kanazawa, Japan},
abstract = {With the rapid development of mobile terminal, mobile applications are gradually penetrated into all aspects of people's life and work. Mobile games, mobile streaming media, location services, mobile Internet news, instant messaging, mobile music and other rich and colorful information era are changing the social life. In view of this, we propose the application software performance test based on the mobile terminal, and analyze the performance test technology and method of the mobile application. Experimental results show that the performance test of the application system can predict the pressure in real environment, the system will be applied in the problems exposed, through the analysis of the data of the test, it will provide help for performance optimization of application system. &copy; 2017 IEEE.},
key = {Application programs},
keywords = {Artificial intelligence;Computer software;Computer terminals;Media streaming;Mobile computing;Mobile phones;Mobile telecommunication systems;Software engineering;Software testing;Testing;},
note = {Loadrunner;Mobile applications;Mobile terminal;Performance tests;Test method;Test technology;},
URL = {http://dx.doi.org/10.1109/SNPD.2017.8022751},
} 


@inproceedings{1994031191086,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Load testing software using deterministic state testing},
journal = {Proceedings of the 1993 International Symposium on Software Testing and Analysis (ISSTA)},
author = {Avritzer, Alberto and Larson, Brian},
year = {1993},
pages = {82 - 88},
address = {Cambridge, MA, USA},
abstract = {In this paper we introduce a new load testing technique called Deterministic Markov State Testing and report on its application. Our approach is called 'deterministic' because the sequence of test case execution is set at planning time, and 'state testing' because each test case certifies a unique software state. There are four main advantages of Deterministic Markov State Testing for system testers: provision of precise software state information for root cause analysis in load test, accommodation for limitations of the system test lab configuration, higher acceleration ratios in system test, and simple management of distributed execution of test cases. System testers using the proposed method have great flexibility in dealing with common system test problems: limited access to the system test environment, unstable software, or changing operational conditions. Because each test case verifies correct execution on a path from the idle state to the software state under test, our method does not require the continuous execution of all test cases. Deterministic Markov State Testing is operational-profile-based, and allows for measurement of software reliability robustness when the operational profile changes.},
key = {Computer software},
keywords = {Computer system recovery;Distributed computer systems;Failure analysis;Probability;Random processes;Reliability;Robustness (control systems);Software engineering;Statistical tests;Telecommunication systems;},
note = {Deterministic Markov State Testing;Load testing software;Operational profile;Planning time;Software reliability robustness;System testers;},
} 


@inproceedings{20131016093036,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Application stress testing: Achieving cyber security by testing cyber attacks},
journal = {2012 IEEE International Conference on Technologies for Homeland Security, HST 2012},
author = {Underbrink, Al and Potter, Andrew and Jaenisch, Holger and Reifer, Donald J.},
year = {2012},
pages = {556 - 561},
address = {Waltham, MA, United states},
abstract = {Application stress testing applies the concept of computer network penetration testing to software applications. Since software applications may be attacked - from inside or outside a protected network boundary - they are threatened by actions and conditions which cause delays, disruptions, or failures. Stress testing exposes software systems to simulated cyber attacks, revealing potential weaknesses and vulnerabilities in their implementation. By using such testing, these internal weaknesses and vulnerabilities can be discovered earlier in the software development life cycle, corrected prior to deployment, and lead to improved software quality. Application stress testing is a process and software prototype for verifying the quality of software applications under severe operating conditions. Since stress testing is rarely - if at all - performed today, the possibility of deploying critical software systems that have been stress tested provides a much stronger indication of their ability to withstand cyber attacks. Many possible attack vectors against critical software can be verified as true threats and mitigated prior to deployment. This improves software quality and serves as a tremendous risk reduction for critical software systems used in government and commercial enterprises. The software prototype models and verifies failure conditions of a system under test (SUT). The SUT is first executed in a virtual environment and its normal operational modes are observed. A normal behavior model is generated in order to predict failure conditions based on attack models and external SUT interfaces. Using off-the-shelf software tools, the predictions are verified in the virtual environment by stressing the executing SUT with attacks against the SUT. Results are presented to testers and system developers for dispensation or mitigation. &copy; 2012 IEEE.},
key = {Software testing},
keywords = {Ability testing;Application programs;Computer software selection and evaluation;Crime;National security;Security systems;Software design;Software prototyping;Virtual reality;},
note = {Application testing;attack;Attack model;Attack vector;Commercial enterprise;Critical software;Cyber security;Cyber-attacks;Failure conditions;Network penetration testing;Normal behavior;Operating condition;Operational modes;Penetration testing;Protected networks;Quality of softwares;Risk reductions;Software applications;Software assurance;Software development life cycle;Software prototypes;Software Quality;Software systems;Stress Testing;System developers;System under test;},
URL = {http://dx.doi.org/10.1109/THS.2012.6459909},
} 


@inproceedings{20180104610715,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design and implementation of bank financial business automation testing framework based on QTP},
journal = {Proceedings of 2016 5th International Conference on Computer Science and Network Technology, ICCSNT 2016},
author = {Xie, Xianjie and Yang, Zhijun and Yu, Jiankun and Zhang, Weifeng},
year = {2016},
pages = {143 - 147},
address = {Changchun, China},
abstract = {The current software testing in the aspects of industrial benefits gradually causes the attention of the domestic financial bank. The innovation of software technology, the increase of software scale and the shortened developing period make the traditional manual testing meeting enormous challenges, while the development of automated testing technology has promoted the progress of the software testing industry. Because of the particularity of financial and banking services, the bank is under an obligation to ensure the quality and reliability of software. Therefore it's vital to test the software. In specific practice, although the powerful third-party testing tools can be used as a solution, it is hard to rely on certain tool to implement automated testing, hence a framework of automated test is required to be introduced for testing, which intends to handle high efficiency and high-quality testing for software automation. This paper proposes a kind of software automation testing framework based on QTP, mainly targeting on the core of the bank, credit, online banking to test the function of the three major operations. The framework is a secondary development based on QTP and mainly for regression testing of software, which integrates techniques including object recognition, data-driven, and keyword-driven technology, checkpoint technology, to proceed business-level testing. The paper expatiated on four issues, which were the test system design, the test standardization, the testing framework design and the testing of the implementation. The practical application shows that the framework can improve the operational efficiency, reduce the test cost, and guarantee the smooth progress of the software automation testing.<br/> &copy; 2016 IEEE.},
key = {Software testing},
keywords = {Application programs;Automation;Computer networks;Computer software;Efficiency;Finance;Object recognition;Software engineering;Software reliability;Testing;},
note = {Automated testing tools;Business automation;Design and implementations;Operational efficiencies;Secondary development;Software automation;Software technology;Test automation frameworks;},
URL = {http://dx.doi.org/10.1109/ICCSNT.2016.8070136},
} 


@inproceedings{1994011191086,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Load testing software using deterministic state testing},
author = {Avritzer, Alberto and Larson, Brian},
year = {1993},
pages = {82 - 88},
address = {Cambridge, MA, United states},
abstract = {In this paper we introduce a new load testing technique called Deterministic Markov State Testing and report on its application. Our approach is called 'deterministic' because the sequence of test case execution is set at planning time, and 'state testing' because each test case certifies a unique software state. There are four main advantages of Deterministic Markov State Testing for system testers: provision of precise software state information for root cause analysis in load test, accommodation for limitations of the system test lab configuration, higher acceleration ratios in system test, and simple management of distributed execution of test cases. System testers using the proposed method have great flexibility in dealing with common system test problems: limited access to the system test environment, unstable software, or changing operational conditions. Because each test case verifies correct execution on a path from the idle state to the software state under test, our method does not require the continuous execution of all test cases. Deterministic Markov State Testing is operational-profile-based, and allows for measurement of software reliability robustness when the operational profile changes.},
key = {Computer software},
keywords = {Statistical tests;Software engineering;Robustness (control systems);Reliability;Distributed computer systems;Telecommunication systems;Random processes;Probability;Failure analysis;Computer system recovery;},
note = {Load testing software;Deterministic Markov State Testing;System testers;Software reliability robustness;Operational profile;Planning time;},
URL = {http://dx.doi.org/10.1145/154183.154244},
} 


@inproceedings{20174604403370,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Automation testing framework for web applications with selenium WebDriver: Opportunities and threats},
journal = {ACM International Conference Proceeding Series},
author = {Vila, Elior and Novakova, Galia and Todorova, Diana},
volume = {Part F131200},
year = {2017},
pages = {144 - 150},
address = {Bangkok, Thailand},
abstract = {The present paper discusses the need of automation testing in the process of software development, in order to provide high quality, robust and reliable software product. It answers the question why automation testing plays such a significant role in software development lifecycle as well as why not to use already existing automation testing tools when testing web applications and why it is better to create automation testing framework. Some reliable approaches how to build a testing framework are investigated. Selenium WebDriver tool is pointed out as appropriate solution when creating such framework and its wide use is outlined. Moreover, the paper provides analysis and detailed list of opportunities and threats of using Selenium WebDriver tool. The paper concludes by providing arguments for the value of the creation of automation framework for Web applications with Selenium WebDriver.<br/> &copy; 2017 Association for Computing Machinery.},
key = {Software testing},
keywords = {Application programs;Automation;Image processing;Network function virtualization;Selenium;Software design;Software engineering;},
note = {Automation testing;High quality;Software development life cycle;Software products;Testing framework;WEB application;},
URL = {http://dx.doi.org/10.1145/3133264.3133300},
} 


@inproceedings{1991100274593,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Development of an economical, software-controlled battery load testing system},
journal = {INTELEC, International Telecommunications Energy Conference (Proceedings)},
author = {Hadfield, J.A.},
year = {1990},
pages = {553 - 555},
issn = {02750473},
address = {Orlando, FL, USA},
abstract = {Battery discharge capacity tests have traditionally been performed manually, although several mechanized systems are commercially available. A need was identified at the Manitoba Telephone System (MTS) to accurately and economically load test batteries in the field, to verify the capacity of new installations as well as to assist determining the true end-of-life of existing strings. The development of an economical, software-controlled system for testing -48-volt battery strings in the telephone environment is discussed.},
key = {Electric Batteries},
keywords = {Computer Software;Electric Discharges;Telephone Systems;},
note = {Battery Discharges;Battery Loads;Battery Strings;},
} 


@inproceedings{20102713049591,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Webteste: A stress test tool},
journal = {WEBIST 2006 - 2nd International Conference on Web Information Systems and Technologies, Proceedings},
author = {Saba, Hugo and De Freitas Jorge, Eduardo Manuel and Costa, Victor Franco and De Barros Pereira, Hernane Borges},
volume = {IT/WIA},
year = {2006},
pages = {246 - 249},
address = {Setubal, Portugal},
abstract = {The usage of web applications has became a very common activity in the organizations' scope. From the software engineering perspective, the incessant search for production of more robust softwares, with better quality, is a continuous requirement. The main purpose of this paper is to present the WebTeste, which is a test tool used to verify the robustness of a web application. After comparison of several simulation's results, the use of distributed and ordered computers suggests more reliable tests. In addition, the analysis of the obtained results can suggest a new (re)design of a web system. The WebTeste could be used to perform stress test in order to verify the robustness of a web application more precisely. &copy; 2010.},
key = {Web crawler},
keywords = {Information systems;Software engineering;Testing;},
note = {Engineering perspective;Robust software;Stress test;Stress test tools;WEB application;Web servers;Web system;WebTeste;},
} 


@inproceedings{20145000305850,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {An effective automation testing framework for OATS tool},
journal = {Advances in Intelligent Systems and Computing},
author = {Ramasamy, Gobi and Ramalingam, Sathishkumar},
volume = {324},
year = {2015},
pages = {543 - 550},
issn = {21945357},
address = {Kumaracoil, India},
abstract = {Oracle application test suite (OATS) is a test tool of Oracle. It is a very good integrated testing tool for Web applications, Web services, Oracle applications, and Oracle databases. The Oracle application testing suite is part of the Oracle Enterprise Manager product family and comprises the following tightly integrated products. They are Oracle load testing for scalability, performance and load testing, Oracle functional testing for automated functional and regression testing, and Oracle Test Manager for test process management, including test requirements management, test management, test execution, and defect tracking. OATS uses OpenScript platform. This paper discusses model-based test automation methods and tools referred to collectively as the Test Automation Framework that reduces the time and resources necessary to develop high-quality and high-assurance systems using OATS functional testing tool. Framework is named as Easy to Automate (Ez2Auto) framework. This OATS tool is newly available in market, and there is no established framework available in literature or ready to use in market.<br/> &copy; Springer India 2015.},
key = {Load testing},
keywords = {Artificial intelligence;Automation;Commerce;Evolutionary algorithms;Managers;Model checking;Software testing;Web services;},
note = {Automation tests;Ez2Auto;OATS;Open script;Test suites;},
URL = {http://dx.doi.org/10.1007/978-81-322-2126-5_59},
} 


@inproceedings{20115114614209,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Evaluating load generation in virtualized environments for software performance testing},
journal = {IEEE International Symposium on Parallel and Distributed Processing Workshops and Phd Forum},
author = {Netto, Marco A.S. and Menon, Suzane and Vieira, Hugo V. and Costa, Leandro T. and De Oliveira, Flavio M. and Saad, Rodrigo and Zorzo, Avelino},
year = {2011},
pages = {993 - 1000},
address = {Anchorage, AK, United states},
abstract = {Before placing a software system into production, it is necessary to guarantee it provides users with a certain level of Quality-of-Service. Intensive performance testing is then necessary to achieve such a level and the tests require an isolated computing environment. Virtualization can therefore play an important role for saving energy costs by reducing the number of servers required to run performance tests and for allowing performance isolation when executing multiple tests in the same computing infrastructure. Load generation is an important component in performance testing as it simulates users interacting with the target application. This paper presents our experience in using a virtualized environment for load generation aimed at performance testing. We measured several performance metrics and varied system load, number of virtual machines per physical resource, and the CPU pinning schema for comparison of virtual and physical machines. The two main findings from our experiments are that physical machines produced steadier and faster response times under heavy load and that the pinning schema is an important aspect when setting up a virtualized environment for load generation. &copy; 2011 IEEE.<br/>},
key = {Software testing},
keywords = {Computer architecture;Load testing;Quality of service;Virtual reality;Virtualization;},
note = {Computing environments;Computing infrastructures;Loadrunner;Multicore architectures;Performance isolations;Performance testing;Software performance testing;Virtualized environment;},
URL = {http://dx.doi.org/10.1109/IPDPS.2011.244},
} 


@article{1996463344529,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing a large finance application},
journal = {IEEE Software},
author = {Grossman, David and McCabe, M.Catherine and Staton, Christopher and Bailey, Bret and Frieder, Ophir and Roberts, David C.},
volume = {13},
number = {5},
year = {1996},
pages = {50 - 54},
issn = {07407459},
abstract = {American Management System's Federal Financial System, a financial accounting application, was applied in a Customer Information Control System DB2 environment running on a large IBM mainframe. A test tool, TPNS (Teleprocessing Network Simulator), was used to verify if the software's performance is within acceptable standards. Detailed tuning was made after the development of the initial prototype. The test produced a fair approximation of the actual performance during the first two years of operation.},
key = {Computer software selection and evaluation},
keywords = {Computer aided software engineering;Computer operating systems;Computer simulation;Database systems;Financial data processing;Response time (computer systems);},
note = {Software package Federal financial system;Software package Teleprocessing network simulator;},
URL = {http://dx.doi.org/10.1109/52.536458},
} 


@inproceedings{2005159032294,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Experiences integrating and scaling a performance test bed generator with an open source CASE tool},
journal = {Proceedings - 19th International Conference on Automated Software Engineering, ASE 2004},
author = {Cai, Yuhong and Grundy, John and Hosking, John},
year = {2004},
pages = {36 - 45},
address = {Linz, Austria},
abstract = {We report on our experiences developing a performance test-bed generator for industrial usage by extending an open-source UML CASE tool. This tool generates client and server code, database configuration and deployment scripts from a high-level software architecture description. It automates the code generation, compilation, deployment and performance metric result collection processes. We identify a range of problems that arose from our previous research on performance test-bed generation that needed to be addressed to scale this automated software engineering technique. We describe a range of approaches we used to solve these problems in our new tool. We then report on industrial deployment and evaluation of our new tool and discuss the effectiveness of these solutions. &copy; 2004 IEEE.},
key = {Computer aided software engineering},
keywords = {Codes (symbols);Computer architecture;Computer programming languages;Computer simulation;Computer software;Database systems;Industrial applications;Mathematical models;Problem solving;Program compilers;},
note = {Architectural analysis;Experience report;Software performance testing;Software tool extension;},
} 


@article{20100312640850,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Realization and application of transformer substation automation test simulation system based on PLC module},
journal = {Dianli Xitong Baohu yu Kongzhi/Power System Protection and Control},
author = {Deng, Jie-Qing and Yuan, Yu-Bo},
volume = {37},
number = {24},
year = {2009},
pages = {157 - 160},
issn = {16743415},
abstract = {The current transformer substation automation test is mainly for single measurement and control device, is not for automation system. So transformer substation automation test simulation system based on PLC module is proposed and the effective test for automation system is carried out. Firstly, this paper describes structure of automation system test and explains test simulation system's constitution. Then it carries on explanation to the simulation environment reality from two aspects of hardware and software. Secondly, it elaborates in detail how to use the test simulation system to simulate electrical network breakdown, to test performance of automation system. Lastly, this paper points out because the PLC system provides the user the development contact surface, it enables the test simulation system to have certain flexibility and the extendibility.<br/>},
key = {Electric transformer testing},
keywords = {Automation;Computer software;Electric transformers;Transformer substations;},
note = {Automation systems;Electrical networks;Hardware and software;Measurement and control;Simulation environment;Simulation systems;Substation automation;Substation Automation Systems;},
} 


@inproceedings{20130916056163,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Software performance test automation by using the virtualization},
journal = {Lecture Notes in Electrical Engineering},
author = {Kim, Gwang-Hun and Kim, Yeon-Gyun and Shin, Seok-Kyu},
volume = {215 LNEE},
year = {2013},
pages = {1191 - 1199},
issn = {18761100},
address = {Pyeong Chang, Korea, Republic of},
abstract = {In this paper, we propose a method on software performance test automation by using the virtualization. In general, most test engineers use the public performance testwares such as Load Runner and Silk Performer to validate the performance efficiency of their own systems. In case that they cannot use the performance testwares due to some technical limitations in the testwares, the testers should perform the testing in manually. As waste of computer and human resources is resulted from the situation, we need to propose the test automation scheme by using the virtualization technology to prevent the dissipation in the test environment which has limited resources. The system architecture considered efficient usage of computer resources and test automation to reduce human acts are addressed mainly in this paper. Finally, a number of experiments show that the proposed schemes allow offering the possibility for automated software performance testing by using the virtualization. &copy; 2013 Springer Science+Business Media. automation*Virtualization.},
key = {Software testing},
keywords = {Automation;Virtual reality;},
note = {Computer resources;Performance efficiency;Performance testing;Software performance;Software performance engineerings;Software performance testing;System architectures;Technical limitations;Test Automation;Test engineers;Test Environment;Virtualization technologies;Virtualizations;},
URL = {http://dx.doi.org/10.1007/978-94-007-5860-5_143},
} 


@article{20131116116954,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing of LiDAR exploitation software},
journal = {Computers and Geosciences},
author = {Varela-Gonzalez, M. and Gonzalez-Jorge, H. and Riveiro, B. and Arias, P.},
volume = {54},
year = {2013},
pages = {122 - 129},
issn = {00983004},
abstract = {Mobile LiDAR systems are being used widely in recent years for many applications in the field of geoscience. One of most important limitations of this technology is the large computational requirements involved in data processing. Several software solutions for data processing are available in the market, but users are often unknown about the methodologies to verify their performance accurately. In this work a methodology for LiDAR software performance testing is presented and six different suites are studied: QT Modeler, AutoCAD Civil 3D, Mars 7, Fledermaus, Carlson and TopoDOT (all of them in x64). Results depict as QTModeler, TopoDOT and AutoCAD Civil 3D allow the loading of large datasets, while Fledermaus, Mars7 and Carlson do not achieve these powerful performance. AutoCAD Civil 3D needs large loading time in comparison with the most powerful softwares such as QTModeler and TopoDOT. Carlson suite depicts the poorest results among all the softwares under study, where point clouds larger than 5 million points cannot be loaded and loading time is very large in comparison with the other suites even for the smaller datasets. AutoCAD Civil 3D, Carlson and TopoDOT show more threads than other softwares like QTModeler, Mars7 and Fledermaus. &copy; 2012 Elsevier Ltd.},
key = {Loading},
keywords = {Computer aided design;Data processing;Optical radar;Software testing;Three dimensional computer graphics;},
note = {AutoCad;Carlson;Computational requirements;Geosciences;Large datasets;Loading time;Mobile lidar;Mobile lidar system;Performance testing;Point cloud;Software performance testing;Software solution;Stress test;},
URL = {http://dx.doi.org/10.1016/j.cageo.2012.12.001},
} 


@article{20104913468013,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A genetic algorithm-based stress test requirements generator tool and its empirical evaluation},
journal = {IEEE Transactions on Software Engineering},
author = {Garousi, Vahid},
volume = {36},
number = {6},
year = {2010},
pages = {778 - 797},
issn = {00985589},
abstract = {Genetic algorithms (GAs) have been applied previously to UML-driven stress test requirements generation with the aim of increasing chances of discovering faults relating to network traffic in distributed real-time systems. However, since evolutionary algorithms are heuristic, their performance can vary across multiple executions, which may affect robustness and scalability. To address this, we present the design and technical detail of a UML-driven, GA-based stress test requirements generation tool, together with its empirical analysis. The main goal is to analyze and improve the applicability, efficiency, and effectiveness and also to validate the design choices of the GA used in the tool. Findings of the empirical evaluation reveal that the tool is robust and reasonably scalable when it is executed on large-scale experimental design models. The study also reveals the main bottlenecks and limitations of the tools, e.g., there is a performance bottleneck when the system under test has a large number of sequence diagrams which could be triggered independently from each other. In addition, issues specific to stress testing, e.g., the impact of variations in task arrival pattern types, reveal that the tool generally generates effective test requirements, although the features of those test requirements might be different in different runs (e.g., different stress times from the test start time might be chosen). While the use of evolutionary algorithms to generate software test cases has been widely reported, the extent, depth, and detail of the empirical findings presented in this paper are novel and suggest that the proposed approach is effective and efficient in generating stress test requirements. It is hoped that the findings of this empirical study will help other SBSE researchers with the empirical evaluation of their own techniques and tools. &copy; 2010 IEEE.<br/>},
key = {Software testing},
keywords = {Genetic algorithms;Heuristic algorithms;Interactive computer systems;Real time systems;},
note = {Distributed real time system;Empirical analysis;Empirical evaluations;Genetic algorithm (GAs);Performance bottlenecks;Stress Testing;Test Automation;Test tools;},
URL = {http://dx.doi.org/10.1109/TSE.2010.5},
} 


@inproceedings{20111213849200,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design of comprehensive performance test system for residual current fire monitoring detector based on virtual instrument technology},
journal = {Proceedings - 3rd International Conference on Measuring Technology and Mechatronics Automation, ICMTMA 2011},
author = {Xie, Qi and Xu, Wei and Gu, Qimin and Xu, Huigang},
volume = {1},
year = {2011},
pages = {950 - 953},
abstract = {Aiming at the need of detecting the residual current fire monitoring detector, an intelligent test system based on virtual instrument technology was designed. This system was composed of industrial computer, data acquisition card, signal conditioning circuit, three-phase great current generator and pneumatic fixture, etc. Using LabVIEW virtual instrument technology platform, the related test and data processing program codes were developed, and its high speed data acquisition and data processing satisfied the needs of ex-factory comprehensive performance test for residual current fire monitoring detector. The hardware design was given and the working principles of this generator were introduced, the module design of system software was also introduced in detail. Practical application shows that the intelligent test system features with stable and reliable, easy to operate and maintain, high precision and can improve the design and performance of products, which can be widely used.<br/>},
key = {Software testing},
keywords = {Data acquisition;Data handling;Digital instruments;Fires;Product design;Signal conditioning circuits;Signal processing;},
note = {Comprehensive performance;Data acquisition cards;Fire Monitoring;High speed data acquisition;Intelligent test;Intelligent test system;LabVIEW virtual instrument;Virtual instrument technology;},
URL = {http://dx.doi.org/10.1109/ICMTMA.2011.238},
} 


@inproceedings{20180604700217,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Software-defined network solutions for science scenarios: Performance testing framework and measurements},
journal = {ACM International Conference Proceeding Series},
author = {Rao, Nageswara S.V. and Liu, Qiang and Sen, Satyabrata and Kettimuthu, Raj and Boley, Josh and Settlemyer, Bradley W. and Chen, Hsing B. and Katramatos, Dimitrios and Yu, Dantong},
year = {2018},
pages = {ACM Special Interest Group on Mobility of Systems, Users, Data and Computing (SIGMOBILE); ACM Special Interest Group on Operating Systems (SIGOPS) - },
address = {Varanasi, India},
abstract = {High-performance scientific workflows utilize supercomputers, scientific instruments, and large storage systems. Their executions require fast setup of a small number of dedicated network connections across the geographically distributed facility sites.We present Software-Defined Network (SDN) solutions consisting of site daemons that use dpctl, Floodlight, ONOS, or OpenDaylight controllers to set up these connections. The development of these SDN solutions could be quite disruptive to the infrastructure, while requiring a close coordination among multiple sites; in addition, the large number of possible controller and device combinations to investigate could make the infrastructure unavailable to regular users for extended periods of time. In response, we develop a Virtual Science Network Environment (VSNE) using virtual machines, Mininet, and custom scripts that support the development, testing, and evaluation of SDN solutions, without the constraints and expenses of multi-site physical infrastructures; furthermore, the chosen solutions can be directly transferred to production deployments. By complementing VSNE with a physical testbed, we conduct targeted performance tests of various SDN solutions to help choose the best candidates. In addition, we propose a switching response method to assess the setup times and throughput performances of different SDN solutions, and present experimental results that show their advantages and limitations.<br/> &copy; 2018 ACM. 978-1-4503-6372-3/18/01. . . $15.00.},
key = {Distributed computer systems},
keywords = {Controllers;Data storage equipment;Electric lighting;Software defined networking;Software testing;Solution mining;Supercomputers;},
note = {Dedicated networks;Performance testing framework;Physical testbeds;Science scenarios;Scientific instrument;Scientific workflows;Switching response;Throughput performance;},
URL = {http://dx.doi.org/10.1145/3154273.3154336},
} 


@inproceedings{20163502742304,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A Framework to Evaluate the Effectiveness of Different Load Testing Analysis Techniques},
journal = {Proceedings - 2016 IEEE International Conference on Software Testing, Verification and Validation, ICST 2016},
author = {Gao, Ruoyu and Jiang, Zhen Ming and Barna, Cornel and Litoiu, Marin},
year = {2016},
pages = {22 - 32},
address = {Chicago, IL, United states},
abstract = {Large-scale software systems like Amazon and eBay must be load tested to ensure they can handle hundreds and millions of current requests in the field. Load testing usually lasts for a few hours or even days and generates large volumes of system behavior data (execution logs and counters). This data must be properly analyzed to check whether there are any performance problems in a load test. However, the sheer size of the data prevents effective manual analysis. In addition, unlike functional tests, there is usually no test oracle associated with a load test. To cope with these challenges, there have been many analysis techniques proposed to automatically detect problems in a load test by comparing the behavior of the current test against previous test(s). Unfortunately, none of these techniques compare their performance against each other. In this paper, we have proposed a framework, which evaluates and compares the effectiveness of different test analysis techniques. We have evaluated a total of 23 test analysis techniques using load testing data from three open source systems. Based on our experiments, we have found that all the test analysis techniques can effectively build performance models using data from both buggy or non-buggy tests and flag the performance deviations between them. It is more cost-effective to compare the current test against two recent previous test(s), while using testing data collected under longer sampling intervals (&le; 180 seconds). Among all the test analysis techniques, Control Chart, Descriptive Statistics and Regression Tree yield the best performance. Our evaluation framework and findings can be very useful for load testing practitioners and researchers. To encourage further research on this topic, we have made our testing data publicity available to download. &copy; 2016 IEEE.},
key = {Software testing},
keywords = {Cost effectiveness;Internet;Load testing;Open source software;Open systems;Testing;Verification;},
note = {Analysis techniques;Descriptive statistics;Evaluation framework;Large-scale software systems;Open source system;Performance Model;Performance problems;Sampling interval;},
URL = {http://dx.doi.org/10.1109/ICST.2016.9},
} 


@inproceedings{20133016524771,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A distributed, cross-platform automation testing framework for GUI-driven applications},
journal = {Proceedings of 2nd International Conference on Computer Science and Network Technology, ICCSNT 2012},
author = {Yao, Yepeng and Wang, Xuren},
year = {2012},
pages = {723 - 726},
address = {Changchun, China},
abstract = {With the rapid development of computer technology, nowadays GUIs have been widely used in desktop applications and web applications. GUI-driven application testing is an emergent approach to software testing and plays a key role to assure software quality. This paper first discusses the various methods for testing GUI-driven applications, and then defines a GUI model and formally defines the test case and the test suite. Finally, it proposes a novel automated, distributed and cross-platform testing framework for GUI. Experiments conducted showed that the proposed testing architecture managed to use parallel cross-platform clusters to test heterogeneous applications whose technologies were incompatible with the testing framework. &copy; 2012 IEEE.},
key = {Graphical user interfaces},
keywords = {Automation;Computer science;Computer software selection and evaluation;Software testing;},
note = {Application testing;Automation testing;Computer technology;Cross-platform;Desktop applications;Distributed testing;Software Quality;Testing framework;},
URL = {http://dx.doi.org/10.1109/ICCSNT.2012.6526035},
} 


@inproceedings{20105013486840,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design of automatic performance test system for CPS},
journal = {2010 International Conference on Computer, Mechatronics, Control and Electronic Engineering, CMCE 2010},
author = {Xu, Wei and Xu, Huigang and Xie, Qi and Yang, Yunfei and Dai, Mei},
volume = {4},
year = {2010},
pages = {206 - 209},
abstract = {In order to satisfy the needs of comprehensive and accurate performance test for CPS (Control and Protective Switching), an automatic performance test system was studied in this paper. The hardware structure and software was introduced in detail; the hardware system was made up of the industrial control computer, the three-phase current generator, adjustable single-phase power, pneumatic fixture, and so on. The test system software developed by LabVIEW was mainly used to achieve the functions of data acquisition, data processing and data display. The designed system is able to automatically test all functions of different types of CPS, including measurement function, communication function, multiple protection function, and so on. Practical application shows that the test system has following properties: high precision, low cost, strong anti-interference and convenient maintenance. &copy; 2010 IEEE.<br/>},
key = {Computer control systems},
keywords = {Automatic testing;Computer hardware;Computer programming languages;Data acquisition;Data handling;Electric equipment protection;Hardware;Software testing;},
note = {Accurate performance;Automatic test system;Communication functions;Industrial control computer;LabViEW;Measurement function;Performance tests;Three-phase currents;},
URL = {http://dx.doi.org/10.1109/CMCE.2010.5610188},
} 


@article{20093812327320,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Measurement and control system for car clutch cover assembly comprehensive performance test rig},
journal = {Yi Qi Yi Biao Xue Bao/Chinese Journal of Scientific Instrument},
author = {Liu, Zhenzhong and Zhao, Lianyu and Liu, Qingjian and Wang, Taiyong},
volume = {30},
number = {SUPPL.},
year = {2009},
pages = {226 - 229},
issn = {02543087},
abstract = {The measurement and control system for car clutch cover assembly comprehensive performance test rig is designed and developed. In the system, the motion controller, acting as a client computer, controls the servo motors, and the industrial computer, acting as a host computer, acquires and processes signal, commands the client computer, and achieves the function of human-computer interaction. Procedure of the measurement and control system was designed with application of VC++6.0 software based on the object oriented method in the environment of Windows XP Embedded. The result shows that the system can test multi-specifications (&Phi;275-&Phi;430) clutch cover assembly and function well.<br/>},
key = {Computer control},
keywords = {Application programs;Clutches;Control systems;Human computer interaction;Object oriented programming;Servomotors;Vehicle performance;},
note = {Comprehensive performance;Host computers;Industrial computers;Measurement and control systems;Motion controller;Object oriented method;Test rigs;Windows XP;},
} 


@article{20111913969112,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Test component assignment and scheduling in a load testing environment},
journal = {Periodica Polytechnica Electrical Engineering},
author = {Eros, Levente and Bozoki, Ferenc},
volume = {52},
number = {3-4},
year = {2008},
pages = {145 - 152},
issn = {03246000},
abstract = {In this paper we introduce two major problems from the field of load (or performance) testing and our solutions for them. When testing the performance of a device (System Under Test - SUT), the test environment executes many software entities (the so-called test components) on the hosts of the test environment (testing hosts). Our goal is to maximize the load on the testing hosts by assigning the test components to them closely to optimal. The first problem to be solved is, thus, a special case of the task assignment problem for which many algorithms have been developed. Our solutions presented in this paper are, however, optimized for distributing load testing traffic in the case of which the possibilities and restrictions to be taken into account are very different from those of the classical task assignment case. The other problem we deal with is how to schedule test components running on the same testing host. Most of the papers written on scheduling focus on the characteristics of the generated load, but not on the way of generating it. These papers usually assume that the load can be generated by improving hardware resources. In this paper, however, we introduce a model and an algorithm which improves the efficiency of scheduling in a load testing environment with way less hardware resources. The algorithm is based on our novel concept of virtual threads. Our simulations have shown that by applying our solutions, the efficiency of load testing can be significantly increased. &copy; Periodica Polytechnica 2008.<br/>},
key = {Load testing},
keywords = {Combinatorial optimization;Computational complexity;Efficiency;Hardware;Scheduling;Software testing;Testing;},
note = {Distributing-load;Hardware resources;Software entities;System under test;Task assignment;Test components;Test Environment;Testing environment;},
URL = {http://dx.doi.org/10.3311/pp.ee.2008-3-4.03},
} 


@inproceedings{2004488472493,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Architecture and performance testing of a software GPS receiver for space-based applications},
journal = {Proceedings of the National Technical Meeting, Institute of Navigation},
author = {Gold, Kenn and Brown, Alison},
volume = {2004},
year = {2004},
pages = {624 - 635},
address = {San Diego, CA, United states},
abstract = {NAVSYS has modified the design of its Software GPS Receiver to optimize performance for various space-based scenarios. These include capabilities to track GPS satellites from missions that are at altitudes higher than the GPS constellation. The approach is based on Digital Beam Steering, which also presents significant advantages for multipath mitigation, which will improve kinematic carrier phase tracking and GPS interferometric attitude determination for orbital applications. In addition, the composite signal formed from the beam steering algorithms lends itself to antenna placement around the spacecraft body, which will result in continuous visibility, even for spinning satellites. Inertial aiding with the SGR has also been adapted for space applications including high dynamic scenarios in which it is difficult to track GPS. In order to test the modifications required for the Space-Software GPS Receiver (SSGR), the NAVSYS simulation tools suite has been augmented to account for orbital scenarios. This involved adding an interface to the GPS Toolbox product to accept orbital trajectories generated with Satellite Tool Kit. The Toolbox in turn drives the hardware simulations with the Advanced GPS Hybrid Simulator.},
key = {Global positioning system},
keywords = {Acoustic receivers;Algorithms;Computer simulation;Computer software;Geostationary satellites;Kinematics;Orbits;Space applications;Testing;Tracking (position);},
note = {Constellations;GPS signals;Hybrid simulators;Space-software GPS receiver (SSGR);},
} 


@inproceedings{20145000302487,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance evaluation of web based automation testing tools},
journal = {Proceedings of the 5th International Conference on Confluence 2014: The Next Generation Information Technology Summit},
author = {Angmo, Rigzin and Sharma, Monika},
year = {2014},
pages = {731 - 735},
address = {Noida, India},
abstract = {In today's 21<sup>st</sup> century era countless software applications are written as a web based application which runs in a web browsers. With new technologies and commercialization of I.T. sector, the web based system has undergoes frequent and rapid changes. Today Softwares are coded as a web based application, which help to access data from any part of the globe. Even the economic relevance of web based enhances the control and quality of software. The quality assurance of any system depends on its test. But to do manually testing in most of the cases is time consuming, expensive and hectic. For the better business purpose and to save time and money automation testing is required. There are variety of tools are available in the market for this. One of the best known tool is selenium suite which is a combination of different automation testing tool. In this paper we will discuss about the selenium suite. It provides testers with different framework for different test cases. The main objective of this paper is to find the best tool in selenium suite and then compare it with some other tool for same task. For this purpose, performance evaluation is done on the basis of some criteria.},
URL = {http://dx.doi.org/10.1109/CONFLUENCE.2014.6949287},
} 


@article{20154201402194,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {To What Extent is Stress Testing of Android TV Applications Automated in Industrial Environments?},
journal = {IEEE Transactions on Reliability},
author = {Jiang, Bo and Chen, Peng and Chan, Wing Kwong and Zhang, Xinchao},
volume = {65},
number = {3},
year = {2016},
pages = {1223 - 1239},
issn = {00189529},
abstract = {An Android-based smart television (TV) must reliably run its applications in an embedded program environment under diverse hardware resource conditions. Owing to the diverse hardware components used to build numerous TV models, TV simulators are usually not sufficiently high in fidelity to simulate various TV models and thus are only regarded as unreliable alternatives when stress testing such applications. Therefore, even though stress testing on real TV sets is tedious, it is the de facto approach to ensure the reliability of these applications in the industry. In this paper, we study to what extent stress testing of smart TV applications can be fully automated in the industrial environments. To the best of our knowledge, no previous work has addressed this important question. We summarize the findings collected from ten industrial test engineers who have tested 20 such TV applications in a real production environment. Our study shows that the industry required test automation supports on high-level GUI object controls and status checking, setup of resource conditions, and the interplay between the two. With such supports, 87% of the industrial test specifications of one TV model can be fully automated, and 71.4% of them were found to be fully reusable to test a subsequent TV model with major upgrades of hardware, operating system, and application. It represents a significant improvement with margins of 28% and 38%, respectively, compared with stress testing without such supports.<br/> &copy; 2015 IEEE.},
key = {Software testing},
keywords = {Android (operating system);Application programs;Automation;Computer software reusability;Drag reduction;Hardware;Reliability;Software reliability;Television;Television applications;Testing;},
note = {Android;Automated testing;Hardware components;Industrial environments;Production environments;Resource conditions;Stress Testing;Test case;},
URL = {http://dx.doi.org/10.1109/TR.2015.2481601},
} 


@inproceedings{20132216381521,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Model-based performance testing in the cloud using the MBPeT tool},
journal = {ICPE 2013 - Proceedings of the 2013 ACM/SPEC International Conference on Performance Engineering},
author = {Abbors, Fredrik and Ahmad, Tanwir and Truscan, Dragos and Porres, Ivan},
year = {2013},
pages = {423 - 424},
address = {Prague, Czech republic},
abstract = {We present an approach for performance testing of software services. We use Probabilistic Timed Automata to model the workload of the system, by describing how different user types interact with the system. We use these models to generate load in real-time and we measure different performance indicators. An in-house developed tool, MBPeT, is used to support our approach. We exemplify with an auction web service case study and show how performance information about the system under test can be collected. &copy; 2013 Authors.},
key = {Load testing},
keywords = {Automata theory;Benchmarking;Software testing;Web services;},
note = {load generation;Model based testing;Performance indicators;Performance testing;Probabilistic timed automata;Software services;System under test;User type;},
URL = {http://dx.doi.org/10.1145/2479871.2479937},
} 


@inproceedings{20083111421965,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Action-driven automation test framework for Graphical User Interface (GUI) software testing},
journal = {AUTOTESTCON (Proceedings)},
author = {Feng, Li and Zhuang, Sheng},
year = {2007},
pages = {22 - 27},
address = {Baltimore, MD, United states},
abstract = {In this paper we describe the design and implementation of an action-driven automation test framework especially for GUI software testing. The idea of action-driven automation test framework comes from the core concept of "Quality Assurance (QA)". Better quality can be ensured by increasing the coverage of test cases on the software but the process of creating large number of test cases has to be optimized. With this goal the framework was designed to primarily increase the efficiency and flexibility in composing test cases and simplify the process of learning the test cases. This paper describes the background, features, and implementation details of the framework.<br/>},
key = {Software testing},
keywords = {Automation;Graphical user interfaces;Quality assurance;Testing;},
note = {Automation tests;Design and implementations;Graphical user interfaces (GUI);GUI software;Process of learning;Test case;},
URL = {http://dx.doi.org/10.1109/AUTEST.2007.4374197},
} 


@article{20103513195106,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A Web performance testing framework and its mixed performance modeling process},
journal = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
author = {Ming, Zhong and Yin, Jianfei and Yang, Wei and Wang, Hui and Xiao, Zhijiao},
volume = {47},
number = {7},
year = {2010},
pages = {1192 - 1200},
issn = {10001239},
abstract = {Methods of pure performance testing or single analytical modeling, such as queueing network model, etc, have their limitation on the accuracy of performance indexes measurement, the validity of performance forecasting, and the controlling of testing iteration due to the complexity of Web systems. A Web performance modeling framework supporting mixed performance modeling is proposed. It uses different performance modeling methods for different kinds of performance indexes to derive closed form functions and their hypothesis of measurement. The regression analysis and testing are used on the training data to estimate the parameters of the closed form functions. To demonstrate the feasibility and validity of this framework, a real-world Web community system (igroot.com) is studied under the framework. For the indexes of system response time and scalability, a mixed modeling method is proposed by combining queueing network reduction and extended universal scalability model US-&gamma;. Compared with other practical system performance testing methods, such as universal scalability model US, the model accuracy of performance forecasting is greatly improved and the cost of software and hardware used in the process is greatly reduced. The error rate of estimated response time is within 4 percent, the error rate of estimated throughout saturation point is within 1 percent, and the error rate of estimated infimum of buckle point is within 5 percent. Correlating the scalability model and threads data of the Web server, an HTTP processing bottleneck at the architecture level is identified.<br/>},
key = {Queueing networks},
keywords = {Distributed computer systems;Errors;HTTP;Iterative methods;Queueing theory;Regression analysis;Response time (computer systems);Scalability;Software testing;Testing;},
note = {Analysis and testing;Performance forecasting;Performance Model;Performance testing;Queueing network model;Scalability modeling;Software and hardwares;System response time;},
} 


@inproceedings{20112814145531,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Autonomic load-testing framework},
journal = {Proceedings of the 8th ACM International Conference on Autonomic Computing, ICAC 2011 and Co-located Workshops},
author = {Barna, Cornel and Litoiu, Marin and Ghanbari, Hamoun},
year = {2011},
pages = {91 - 100},
abstract = {In this paper, we present a method for performance testing of transactional systems. The methods models the system under test, finds the software and hardware bottlenecks and generate the workloads that saturate them. The framework is autonomic, the model and workloads are determined during the performance test execution by measuring the system performance, fitting a performance model and by analytically computing the number and mix of users that will saturate the bottlenecks. We model the software system using a two-layer queuing model and use analytical techniques to find the workload mixes that change the bottlenecks in the system. Those workload mixes become stress vectors and initial starting points for the stress test cases. The rest of test cases are generated based on a feedback loop that drives the software system towards the worst case behaviour. &copy; 2011 ACM.<br/>},
key = {Software testing},
keywords = {Load testing;Queueing theory;},
note = {Autonomic Systems;Performance Model;Performance testing;Software and hardwares;Stress Testing;System under test;Testing framework;Transactional systems;},
URL = {http://dx.doi.org/10.1145/1998582.1998598},
} 


@inproceedings{20134316874468,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing framework for rest-based web applications},
journal = {Proceedings of the International Symposium on the Physical and Failure Analysis of Integrated Circuits, IPFA},
author = {Kao, Chia Hung and Lin, Chun Cheng and Chen, Juei-Nan},
year = {2013},
pages = {349 - 354},
address = {Nanjing, Jiangsu, China},
abstract = {Recently, enterprises, organizations, and software companies are building more and more web applications to provide their services over the Internet. In order to fulfill various requirements, the complexity of web applications nowadays is increasing dramatically. As a result, the performance characteristics of web applications, including response time, throughput, etc, become more critical than before and should be taken into careful consideration. If the response time of a web application is poor, users may lose their interests even the function of the web application is correct. Therefore, how to execute performance testing on a complex web application systematically and efficiently will be an important issue. In this paper, a performance testing framework for REST-based web applications is introduced. The performance testing framework aims to provide software testers with an integrated process from test cases design, test scripts generation, to test execution. Based on the test cases designed by software testers and the appropriate software artifacts preserved by the framework (e.g., API document), the framework generates the corresponding performance test scripts, which can be executed by specific performance test tools. This helps software testers to focus more in the design of performance test cases. In addition, effort needed to understand the design and implementation of the application and to learn the operation of testing tools decrease. Thus, the efficiency of performance testing can be highly facilitated. &copy; 2013 IEEE.},
key = {Software testing},
keywords = {Applications;Design;Industry;World Wide Web;},
note = {Design and implementations;Performance characteristics;Performance testing;Performance testing framework;Performance tests;Software artifacts;Software company;WEB application;},
URL = {http://dx.doi.org/10.1109/QSIC.2013.32},
} 


@inproceedings{20083211434602,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Software realization and performance testing of des cryptographic algorithm on the .NET platform},
journal = {The Experience of Designing and Application of CAD Systems in Microelectronics - Proceedings of the 9th International Conference, CADSM 2007},
author = {Yakovyna, Vitaly and Fedasyuk, Dmytro and Seniv, Maxym},
year = {2007},
pages = {386 - 388},
address = {Lviv-Polyana, Ukraine},
abstract = {The software realization of DES symmetric encryption algorithm using CryptoAPI on .NET platform has been analyzed. The processing performance of the software implementation has been tested and it was shown, that the encryption rate is 11.1 Mb/sec on the Intel Celeron D 351 3.2GHz processor, while the development environment is a flexible architecture independent tool and meets all the requirements to the secure implementation of cryptographic software.<br/>},
key = {Cryptography},
keywords = {Computer aided design;Microelectronics;Software testing;},
note = {.NET;CryptoAPI;Cryptographic algorithms;Cryptographic software;DES algorithms;Development environment;Software implementation;Symmetric cryptography;},
URL = {http://dx.doi.org/10.1109/CADSM.2007.4297591},
} 


@inproceedings{20083211434604,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {The Performance testing of RSA algorithm software realization},
journal = {The Experience of Designing and Application of CAD Systems in Microelectronics - Proceedings of the 9th International Conference, CADSM 2007},
author = {Yakovyna, Vitaly and Fedasyuk, Dmytro and Seniv, Maxym and Bilas, Orest},
year = {2007},
pages = {390 - 392},
address = {Lviv-Polyana, Ukraine},
abstract = {The software realization of RSA public key encryption algorithm using CryptoAPI on .NET platform has been analyzed. The processing performance of the software implementation has been tested. The present paper shows, that the encryption rate is 306.4&plusmn;0.6 kbytes/sec, while the coefficient of encryption time increasing with file size increasing is 3.299. It is concluded that the development environment is a flexible architecture independent tool and meets all the requirements to the secure implementation of cryptographic software.<br/>},
key = {Computer aided design},
keywords = {Microelectronics;Public key cryptography;Software testing;},
note = {.NET;Cryptographic software;Development environment;Flexible architectures;Operation performance;Public key encryption algorithms;RSA algorithms;Software implementation;},
URL = {http://dx.doi.org/10.1109/CADSM.2007.4297593},
} 


@inproceedings{20132416416305,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Radiation Belt Storm Probes (RBSP) Flight Software stress testing: Case study and lessons learned},
journal = {IEEE Aerospace Conference Proceedings},
author = {Finnigan, Jeremiah},
year = {2013},
issn = {1095323X},
address = {Big Sky, MT, United states},
abstract = {This paper presents a case study of the Radiation Belt Storm Probes (RBSP) mission Command and Data Handling (C&amp;DH) Flight Software stress testing program. Background information on the motivation for stress testing embedded software, and the general principles and goals of a stress test are provided as an introduction. Details of the stress test program that was implemented for the RBSP C&amp;DH Flight Software are presented and discussed. This discussion includes the design and development of a test framework that was implemented to incrementally build the test scenarios, increase the productivity of the RBSP stress test team, and facilitate reuse for regression testing. Results of the RBSP stress test program are summarized, and lessons learned that may be useful for future embedded software test programs are documented. &copy; 2013 IEEE.},
key = {Software testing},
keywords = {C (programming language);Data handling;Embedded software;Probes;Radiation belts;Storms;Test facilities;Testing;},
note = {Background information;Design and Development;Flight Software;Lessons learned;Mission command;Regression testing;Stress Testing;Test framework;},
URL = {http://dx.doi.org/10.1109/AERO.2013.6496814},
} 


@inproceedings{20094712476045,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Mine pump comprehensive performance testing system based on labview},
journal = {2009 International Conference on Measuring Technology and Mechatronics Automation, ICMTMA 2009},
author = {Wang, Guimei and Jiao, Shanlin and Song, Hui},
volume = {1},
year = {2009},
pages = {300 - 303},
address = {Zhangjiajie, Hunan, China},
abstract = {The pump is one of the key equipments for the safety production of coal mine. It bears the important task to discharge all the underground water. However, the performance efficiency of the water pump will be declined, in the long run. Therefore, in order to ensure the safety production, users should check and test the pump performance regularly, to test if every target pump has live up to the "Coal Mine Safety Regulations". The ultimate goal in finding the fault in time, eliminating hidden dangers, reducing accidents, and saving maintenance costs can be attained. Virtual instrument is the production of modern computer and instrument technology combined in-depth, and is an important technology of computer-assisted testing area. The core idea is "software replacing hardware". The paper introduces the virtual instrument technology into the field of pump performance testing, and designs the mine pump comprehensive performance testing system based on Labview. The system takes software development environment-LabVIEW as platform and based on personal computer, and realizes the function that pump's import and export of water pressure, flow, speed, power, and other signals measured in real-time and dynamic displayed. It uses the polynomial fitting module of LabVIEW to fit the performance curve, and shows the performance curve by the waveform display. At the same time, it uses the Web Publishing Tool of LabVIEW to release the testing interface to the internet, and realizes its network communication function. Compared with traditional instruments, the pump performance testing system which based on Virtual instrument run stably, have strongly data analytical and processing functions, beautiful interface, easy operation, strongly visual function, highly testing precision. &copy; 2009 IEEE.<br/>},
key = {Instrument testing},
keywords = {Coal mines;Computer programming languages;Computer testing;Curve fitting;Data handling;Digital instruments;Groundwater;Mining machinery;Personal computers;Pumps;Software design;},
note = {Comprehensive performance;Computer assisted testing;LabViEW;Network communications;Performance efficiency;Software development environment;Testing systems;Virtual instrument technology;},
URL = {http://dx.doi.org/10.1109/ICMTMA.2009.179},
} 


@inproceedings{20171403536765,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A framework for composing heterogeneous service tools involved in load testing lifecycle},
journal = {Applied System Innovation - Proceedings of the International Conference on Applied System Innovation, ICASI 2015},
author = {Lee, Shin-Jie and Lin, You-Chen and Lin, Kun-Hui and You, Jie-Lin},
year = {2016},
pages = {1075 - 1080},
address = {Osaka, Japan},
abstract = {Load testing is the process of applying ordinary stress to a software system to determine the system performance under normal conditions. In a typical load testing lifecycle, three kinds of service tools are involved: test case recording service tools that make testers easier to generate test cases through a web browsing-like behavior; test case execution service tools that exercise test cases with simulations of a large number of concurrent users; system resource monitoring service tools that provide information of system footprints during the test case executions. However, using these three kinds of service tools one by one to complete a load testing may require extra effort on operating and configuring each service. In this paper, we proposed a framework for composing the three types of service tools as an integrated service for load testing. A raw test case recorded by Badboy tool is automatically converted into an expanded test case that can be executed by JMeter. JMeter and Cacti are then automatically invoked by the framework. The execution time period of JMeter is automatically identified as the input to Cacti for resource monitoring of the system under test. The test report together with system footprints is also automatically generated. In the experimental evaluation, the result shows that the framework significantly save time on operating and configuring the load testing service tools than the traditional approach under a t-test. &copy; 2016 Taylor & Francis Group.},
key = {Software testing},
keywords = {Automatic test pattern generation;Life cycle;Load testing;Monitoring;Network function virtualization;},
note = {Automatically generated;Experimental evaluation;Heterogeneous services;Integrated service;Resource monitoring;System footprints;System under test;Traditional approaches;},
} 


@article{20172903952609,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {OFBench: Performance Test Suite on OpenFlow Switches},
journal = {IEEE Systems Journal},
author = {Lin, Ying-Dar and Lai, Yu-Kuen and Wang, Chen-You and Lai, Yuan-Cheng},
year = {2017},
issn = {19328184},
abstract = {Performance issues of OpenFlow switches are attracting a lot of attention owing to the potential large-scale deployment of software-defined devices. This paper presents the OFBench which is an automatic test suite for evaluating the performance of OpenFlow switches. The design, as part of the Automation Control Test System (ACTS) development, is based on a controller-agent architecture which allows the development of test cases that are written in a high-level script language. In addition to the end-to-end measurement methodology, novel methods are proposed to further profile the internal performance metrics, which are difficult to get due to the black-box nature of the device under test. The prototype of this suite currently comprises five test cases to evaluate five performance metrics, which are action time, pipeline time, buffer size, pipeline efficiency, and timeout accuracy. OpenFlow switches are evaluated and three issues are observed associated with switches during the testing. First, some switches may not be well implemented in the design of apply-action instructions. Second, some switches suffer from random crashes with a high volume of bursty packet-in traffic. Finally, the timer of idle-timeout is often not reset properly with matching flow entry. IEEE},
key = {Computer network performance evaluation},
keywords = {Computer networks;High level languages;Pipelines;Software defined networking;Software testing;Testing;},
note = {Automation controls;End-to-end measurement;Internal performance;Large-scale deployment;Openflow;performance evaluation;Performance metrics;system performance;},
URL = {http://dx.doi.org/10.1109/JSYST.2017.2720758},
} 


@inproceedings{20085211804749,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Test component assignment in a performance testing environment},
journal = {SoftCom 2008: 16th International Conference on Software, Telecommuncations and Computer Networks},
author = {Eros, Levente and Csondes, Tibor},
year = {2008},
pages = {399 - 403},
address = {Split-Dubrovnik, Croatia},
abstract = {In this paper we are going to introduce the problem of assigning test components to hosts of a performance (or load) testing environment, and its two novel solutions. When testing the performance of a device (System Under Test - SUT), the test environment simulates the latter real-life environment of the SUT. The number of hosts in the test environment is however way less than the number of hosts the SUT will have to serve in its real-life environment. Thus, real-life hosts are simulated by software entities, the so-called test components that have to be optimally assigned and then executed on the hosts of the test environment (testing hosts). Our goal is to emulate all the test components by as few testing hosts as possible, that is, to maximize the load on the testing hosts. The problem to be solved is a special case of the task assignment problem for which many solutions have been developed. Our solutions presented in this paper are, however, optimized for distributing load testing traffic. Thus the possibilities and restrictions we had to take into account are very different from those of the classical task assignment case. One of the solutions we present extends existing bin packing heuristics, while the other one solves a series of integer linear programs to make the assignments. Our simulations have shown that by applying our solutions, the average load level on testing hosts can be significantly increased.<br/>},
key = {Software testing},
keywords = {Combinatorial optimization;Computer networks;Integer programming;Load testing;Testing;},
note = {Distributing-load;Integer linear programs;Performance testing;Software entities;System under test;Task assignment;Test Environment;Testing environment;},
URL = {http://dx.doi.org/10.1109/SOFTCOM.2008.4669518},
} 


@inproceedings{20133516679859,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Automatic load testing of web application in SaaS model},
journal = {Advances in Intelligent Systems and Computing},
author = {Stupiec, Emil and Walkowiak, Tomasz},
volume = {224},
year = {2013},
pages = {421 - 430},
issn = {21945357},
address = {Brunow, Poland},
abstract = {Necessity of monitoring in combination with the actual complexity of the e-services creates a need for constructing systems for active monitoring of various types of web services. Usually those systems are high-availability services, that require on one hand ingenious software solutions and on the other hand reliable hardware architecture. The created systems need to be flexible enough to satisfy customers requirements. This paper introduces an example solution of a system, that implement functional monitor of services provided in SaaS model. The provided system allows to check certain functionalities or whole service by running functional/load tests scenarios that are automatically generated, based on specially prepared user model. &copy; Springer International Publishing Switzerland 2013.},
key = {Software as a service (SaaS)},
keywords = {Automatic test pattern generation;Customer satisfaction;Web services;},
note = {Active monitoring;Automatically generated;E-services;Hardware architecture;High availability;Software solution;User Modeling;WEB application;},
URL = {http://dx.doi.org/10.1007/978-3-319-00945-2_38},
} 


@inproceedings{20162202446849,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing as a service for web applications},
journal = {2015 IEEE 7th International Conference on Intelligent Computing and Information Systems, ICICIS 2015},
author = {Ali, Amira and Badr, Nagwa},
year = {2015},
pages = {356 - 361},
address = {Cairo, Egypt},
abstract = {Software testing is a vital activity that is undertaken during software engineering life cycle to ensure software quality and reliability. Performance testing is a type of software testing that is done to shows how web application behaves under a certain workload. Cloud computing as an emerging technology can be used in the field of software engineering to provide cloud testing in order to overcome all deficiencies of conventional testing by leveraging cloud computing resources. As a result, testing-as-a-service (TaaS) is introduced as a service model that performs all testing activities in fully automated manner, on demand with a pay-for use basis. Moreover, TaaS increases testing efficiency and reduces time and cost required for testing. In this paper, performance TaaS framework for web applications is introduced which provides all performance testing activities including automatic test case generation and test execution. In addition, the proposed framework addresses many issues as: maximize resource utilization and continuous monitoring to ensure system reliability. &copy; 2015 IEEE.},
key = {Software testing},
keywords = {Application programs;Cloud computing;Computer software selection and evaluation;Information systems;Intelligent computing;Life cycle;Software engineering;Software reliability;World Wide Web;},
note = {Automatic test-case generations;Continuous monitoring;Emerging technologies;JMeter;Performance testing;Software engineering life-cycle;TaaS;Web application testing;},
URL = {http://dx.doi.org/10.1109/IntelCIS.2015.7397245},
} 


@article{20143017976582,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Development of an integrated web-based system with a pile load test database and pre-analyzed data},
journal = {Geomechanics and Engineering},
author = {Chen, Yit-Jin and Liao, Ming-Ru and Lin, Shiu-Shin and Huang, Jen-Kai and Marcos, Maria Cecilia M.},
volume = {7},
number = {1},
year = {2014},
pages = {37 - 53},
issn = {2005307X},
abstract = {A Web-based pile load test (WBPLT) system was developed and implemented in this study. Object-oriented and concept-based software design techniques were adopted to integrate the pile load test database into the system. A total of 673 case histories of pile load test were included in the database. The data consisted of drilled shaft and driven precast concrete pile axial load tests in drained, undrained, and gravel loading conditions as well as pre-analyzed data and back-calculated design parameters. Unified modeling language, a standard software design tool, was utilized to design the WBPLT system architecture with five major concept-based components. These components provide the static structure and dynamic behavior of system message flows in a visualized manner. The open-source Apache Web server is the building block of the WBPLT system, and PHP Web programming language implements the operation of the WBPLT components, particularly the automatic translation of user query into structured query language. A simple search and inexpensive query can be implemented through the Internet browser. The pile load test database is helpful, and data can be easily retrieved and utilized worldwide for research and advanced applications. &copy; 2014 Techno-Press, Ltd.<br/>},
key = {Piles},
keywords = {Database systems;Internet;Load testing;Object oriented programming;Object-oriented databases;Open source software;Open systems;Precast concrete;Program translators;Query languages;Query processing;Software design;Software testing;Unified Modeling Language;Websites;},
note = {Advanced applications;Apache web server;Automatic translation;Design parameters;Software design techniques;Structured Query Language;System architectures;Web based;},
URL = {http://dx.doi.org/10.12989/gae.2014.7.1.037},
} 


@article{20114614512790,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Investigation on performance testing and evaluation of PReWebD: A.NET technique for implementing web application},
journal = {IET Software},
author = {Kalita, M. and Bezboruah, T.},
volume = {5},
number = {4},
year = {2011},
pages = {357 - 365},
issn = {17518806},
abstract = {A prototype research web application based on Visual Studio platform is developed with.NET as framework, Internet Information Server (IIS) (Version: 5.1) as web server and Microsoft Standard Query Language (SQL) Server (Version: 2005) as database server to study the performance and evaluation of the.NET technique used for developing the web application. The authors call it the PReWebD. As the performance is one of the most important features of a web application, to evaluate the performance, testing of PReWebD has been carried out using Mercury LoadRunner (Version 8.0) for validation and to study some other attributes like scalability, reliability etc. The performance depends on parameters such as hits/s, response time, throughput, errors/s etc. These parameters for PReWebD are tested with different stress levels. The statistical testing and analysis is done to assure the stability, reliability and quality of the application. Here the authors report in details the architecture, testing procedure, result of performance testing as well as the results of statistical analysis on recorded data of PReWebD. &copy; 2011 The Institution of Engineering and Technology.<br/>},
key = {Quality control},
keywords = {Query languages;Query processing;Reliability analysis;Software prototyping;Visual languages;Windows operating system;},
note = {Data-base servers;Important features;Internet information servers;Performance testing;Standard query languages;Statistical testing;Testing procedure;WEB application;},
URL = {http://dx.doi.org/10.1049/iet-sen.2010.0139},
} 


@inproceedings{20114014404035,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Designing approach analysis on small-scale software performance testing tools},
journal = {Proceedings of 2011 International Conference on Electronic and Mechanical Engineering and Information Technology, EMEIT 2011},
author = {Meng, Xiangfeng},
volume = {8},
year = {2011},
pages = {4254 - 4257},
address = {Harbin, China},
abstract = {Currently, most software performance testing tools in the market are large ones designated for enterprises. Aiming at the demand of small-sized and individual customers' conduction of software performance testing, the paper proposes an approach for designing and realizing a small tool for testing. Core design refers to simulating multi-user concurrent operation by simultaneous execution of multithreading and measuring performance of the system tested through whether each threading responses in a correct manner as well as testing data such as period of responding. Testing tool, which is realized by Java language, consists of three modules of case management, test implementation and test report. Multiple designing modes are utilized in a combined manner during designing, which makes the designing scheme a simple one with high efficiency and easy to expand. The market of performance testing is developing in a rapid manner and researching software performance test is gaining increasingly significance. &copy; 2011 IEEE.<br/>},
key = {Software testing},
keywords = {Commerce;Multitasking;},
note = {Concurrent operations;designing approach;designing mode;Individual customers;Measuring performance;Software performance;Software performance testing;Testing tools;},
URL = {http://dx.doi.org/10.1109/EMEIT.2011.6023983},
} 


@article{20143600057828,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Towards virtualized and automated software performance test architecture},
journal = {Multimedia Tools and Applications},
author = {Kim, Gwang-Hun and Kim, Yeon-Gyun and Chung, Kyung-Yong},
volume = {74},
number = {20},
year = {2015},
pages = {8745 - 8759},
issn = {13807501},
abstract = {In this paper, we propose the towards virtualized and automated software performance test architecture. In general, test engineers use the public performance testwares such as Load Runner, Silk Performer to validate the performance efficiency of their own systems. In case that they do not allowed to use the performance testwares due to the technical limitations in the testwares, most testers should perform the testing in manually. According to the waste of computer and human resources resulted from the situation, we need to propose the test automation scheme by using the virtualization technology to prevent the dissipation in the test environment which has limited resources. The system architecture considered efficient usage of computer resources and test automation to reduce human acts are addressed mainly in this paper. we describe our proposed method which deals with the system architecture and test automation procedures. In our system architecture, we will show how to use the virtual machines and the types of the virtual machines for performance measurement. In addition, the six steps of the test automation are introduced for the automated testing procedures. Finally, a number of experiments show that the proposed schemes allow offering the possibility for automated software performance testing by using the virtualization.<br/> &copy; 2013, Springer Science+Business Media New York.},
key = {Software testing},
keywords = {Automation;Computer architecture;Network security;Virtual machine;Virtual reality;Virtualization;},
note = {Performance efficiency;Performance measurements;Performance testing;Software performance engineerings;Software performance testing;Technical limitations;Test Automation;Virtualization technologies;},
URL = {http://dx.doi.org/10.1007/s11042-013-1536-3},
} 


@inproceedings{2005028788142,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Architecture and performance testing of a software GPS receiver for space-based applications},
journal = {IEEE Aerospace Conference Proceedings},
author = {Gold, Kenn and Brown, Alison},
volume = {4},
year = {2004},
pages = {2404 - 2415},
issn = {1095323X},
address = {Big Sky, MT, United states},
abstract = {Space-based GPS technology presents significant challenges over Earth-based systems. These include visibility issues for rotating platforms and tracking of GPS satellites from spacecraft that are in higher orbits than the GPS, realtime resolution of carrier phase ambiguities, and different dynamics during various mission phases. NAVSYS has developed a software GPS receiver that makes use of 3-dimensional Digital Beam Steering technology and inertial aiding to address these issues. This approach offers several advantages including all around visibility for spinning satellites, tracking of weak GPS signals, reduction of multipath, and reprogrammability to accommodate different mission phases. Additionally, a suite of simulation tools based around the NAVSYS Matlab Toolbox and Advanced GPS Hybrid Simulation products have been built to allow testing for simulated space environments. The receiver architecture and test tools are described in this paper.},
key = {Global positioning system},
keywords = {Computer architecture;Computer simulation;Computer software;Orbits;Satellites;Signal processing;Signal to noise ratio;Space applications;},
note = {Digital beam steering technology;Goddard space flight center (GSFC);Precision applications;Satellite signals;},
URL = {http://dx.doi.org/10.1109/AERO.2004.1368035},
} 


@inproceedings{20124015495162,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Expertus: A generator approach to automate performance testing in IaaS clouds},
journal = {Proceedings - 2012 IEEE 5th International Conference on Cloud Computing, CLOUD 2012},
author = {Jayasinghe, Deepal and Swint, Galen and Malkowski, Simon and Li, Jack and Wang, Qingyang and Park, Junhee and Pu, Calton},
year = {2012},
pages = {115 - 122},
address = {Honolulu, HI, United states},
abstract = {Cloud computing is an emerging technology paradigm that revolutionizes the computing landscape by providing on-demand delivery of software, platform, and infrastructure over the Internet. Yet, architecting, deploying, and configuring enterprise applications to run well on modern clouds remains a challenge due to associated complexities and non-trivial implications. The natural and presumably unbiased approach to these questions is thorough testing before moving applications to production settings. However, thorough testing of enterprise applications on modern clouds is cumbersome and error-prone due to a large number of relevant scenarios and difficulties in testing process. We address some of these challenges through Expertus - -a flexible code generation framework for automated performance testing of distributed applications in Infrastructure as a Service (IaaS) clouds. Expertus uses a multi-pass compiler approach and leverages template-driven code generation to modularly incorporate different software applications on IaaS clouds. Expertus automatically handles complex configuration dependencies of software applications and significantly reduces human errors associated with manual approaches for software configuration and testing. To date, Expertus has been used to study three distributed applications on five IaaS clouds with over 10,000 different hardware, software, and virtualization configurations. The flexibility and extensibility of Expertus and our own experience on using it shows that new clouds, applications, and software packages can easily be incorporated. &copy; 2012 IEEE.<br/>},
key = {Infrastructure as a service (IaaS)},
keywords = {Application programs;Automation;Clouds;Codes (symbols);Program compilers;Scalability;Software testing;Testing;},
note = {Aspect;Code Generation;Datacenter;Emulab;IaaS;Multi-tier;Open Cirrus;Performance;Template;},
URL = {http://dx.doi.org/10.1109/CLOUD.2012.98},
} 


@article{20130515969956,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Towards an interface-based automation testing framework for sirverlight applications},
journal = {Information Technology Journal},
author = {Tang, Jingfan and Zhu, Qin and Jiang, Ming},
volume = {12},
number = {4},
year = {2013},
pages = {829 - 834},
issn = {18125638},
abstract = {Nowadays software applications are increasingly becoming large in scale and complexity, thus, Graphical User Interface (GUI) testing plays a formal important role in ensuring the correctness and reliability of software applications. A variety of approaches in the area of GUI testing have emerged in recent years. One notable trend is Model-Based Testing (MBT) which creates an abstract test model that simulates the anticipated behavior of the System Under Testing (SUT) by using some software generated tools to generate model tests. This study highlights the designing as well as the presentation of a new automation testing framework for silverlight applications with particular focuses upon the integration of the Spec Explorer based MBT with a free web framework called WebAii. Both of the tools are available as open source. Spec Explorer can be used to generate the test cases automatically, while WebAii is used to simulate human action and operation processes to complete the test execution in an automated way. &copy; 2013 Asian Network for Scientific Information.},
key = {Software testing},
keywords = {Automation;Graphical user interfaces;Software reliability;Testing;},
note = {Automation testing;GUI testing;Human actions;Model based testing;Model tests;Open sources;Operation process;Software applications;Spec Explorer;Test case;Test execution;Test models;WebAii;},
URL = {http://dx.doi.org/10.3923/itj.2013.829.834},
} 


@article{2001516768189,
language = {German},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {LCC/RAM performance test for Wiener Linien tramway stock using the CaLCC&reg data collection system module},
title = {LCC/RAM-Performancenachweis fur die stracenbahnfahrzeuge der Wiener Linien unter einsatz des moduls CaLCC&reg-DataCollectionSystem},
journal = {ZEV-Zeitschrift fuer Eisenbahnwesen und Verkehrstechnik - Journal for Railway and Transport},
author = {Lehotzky, P. and Trescher, C.},
volume = {125},
number = {9-10},
year = {2001},
pages = {371 - 373},
issn = {09410589},
abstract = {A software tool is presented which makes it possible to store and evaluate the life cycle cost (LCC) data of a vehicle fleet. Wiener Linien use this tool for the purpose of implementing a performance test and for determining parameters for the application of a bonus/penalty system that has been agreed upon between the vehicle manufacturer and operator.},
key = {Railroad rolling stock},
keywords = {Computer aided software engineering;Cost benefit analysis;Data acquisition;Data reduction;Information retrieval systems;Performance;},
note = {Bonus-penalty system;Data collection system module;Life cycle cost;},
} 


@article{20111813948297,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design and performance test of spacecraft test and operation software},
journal = {Acta Astronautica},
author = {Wang, Guohua and Cui, Yan and Wang, Shuo and Meng, Xiaofeng},
volume = {68},
number = {11-12},
year = {2011},
pages = {1774 - 1781},
issn = {00945765},
abstract = {Main test processor (MTP) software is the key element of Electrical Ground Support Equipment (EGSE) for spacecraft test and operation used in the Chinese Academy of Space Technology (CAST) for years without innovation. With the increasing demand for a more efficient and agile MTP software, the new MTP software was developed. It adopts layered and plug-in based software architecture, whose core runtime server provides message queue management, share memory management and process management services and forms the framework for a configurable and open architecture system. To investigate the MTP softwares performance, the test case of network response time, test sequence management capability and data-processing capability was introduced in detail. Test results show that the MTP software is common and has higher performance than the legacy one. &copy; 2011 Elsevier Ltd. All rights reserved.<br/>},
key = {Software testing},
keywords = {Aerospace ground support;Computer architecture;Data handling;Ground supports;Information management;Network architecture;Spacecraft equipment;},
note = {Electrical ground support equipments;Main test processor;Management capabilities;Open architecture systems;Performance tests;Process management;Processing capability;Space technologies;},
URL = {http://dx.doi.org/10.1016/j.actaastro.2011.02.002},
} 


@inproceedings{20174404329102,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A Multi-objective Metaheuristic Approach to Search-Based Stress Testing},
journal = {IEEE CIT 2017 - 17th IEEE International Conference on Computer and Information Technology},
author = {Gois, Nauber and Porfirio, Pedro and Coelho, Andre},
year = {2017},
pages = {55 - 62},
address = {Helsinki, Finland},
abstract = {Nowadays applications need to deal with a large number of concurrent requests. These systems must be stress tested to ensure that they can function correctly under a load. In this context, a research field called Search-based Software Testing has become increasingly important. Most of the search-based test methods are based on single objective optimization. In the case of multi-objective optimization of tests, usually researchers assign different weight values to different objectives and combine them as a single objective. This research paper verifies the use of a multi-objective algorithm in search-based stress testing. The NSGA-II algorithm was implemented in the IAdapter tool using the jMetal framework. IAdapter is a JMeter plugin used for performing search-based stress tests. jMetal is an object-oriented Java-based framework for multi-objective optimization with metaheuristics. One experiment was conducted to validate the proposed approach. &copy; 2017 IEEE.},
key = {Multiobjective optimization},
keywords = {Heuristic methods;Object oriented programming;Optimization;Software testing;Testing;},
note = {Concurrent requests;Multi objective algorithm;Multi-objective metaheuristics;NSGA-II algorithm;Pareto frontiers;Search-based software testing;Single objective optimization;Stress test;},
URL = {http://dx.doi.org/10.1109/CIT.2017.19},
} 


@inproceedings{20083611505910,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Yet another performance testing framework},
journal = {Proceedings of the Australian Software Engineering Conference, ASWEC},
author = {Chen, Shiping and Moreland, David and Nepal, Surya and Zic, John},
year = {2008},
pages = {170 - 179},
address = {Perth, WA, Australia},
abstract = {Performance testing is one of the vital activities spanning the whole life cycle of software engineering. While there are a consideruble number of performance testing products and open source tools available, they are either too expensive and complicated for small projects, or too specific and simple for diverse performance tests. This paper presents a general-purpose testing framework for both simple and small, and complicated and large-scale performance testing. Our framework proposes an abstraction to facilitate performance testing by separating the application logic from the common performance testing functionalities. This leads to a set of general-purpose data models and components, which form the core of the framework. The framework has been prototyped on both.NET and Java platforms and was used for a number of performance-related projects. &copy; 2008 IEEE.<br/>},
key = {Software testing},
keywords = {Life cycle;Open source software;},
note = {Application logic;Java platforms;Open source tools;Performance testing;Performance testing framework;Performance tests;Testing framework;Whole life cycles;},
URL = {http://dx.doi.org/10.1109/ASWEC.2008.4483205},
} 


@inproceedings{20140817357128,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A performance testing tool for source code},
journal = {Applied Mechanics and Materials},
author = {Luo, Jun and Yang, Wei},
volume = {490-491},
year = {2014},
pages = {1553 - 1559},
issn = {16609336},
address = {Beijing, China},
abstract = {With the rapid development of the information age, computer software develops toward systematization and complication. In application areas such as commerce, finance and medical treatment, the performance of software is attracting more and more attention which even becomes one of the important factors to determine whether users are willing to use a piece of software. Currently, static checking tools are mostly designed to check the code errors but pay little attention to the performance problems. In order to detect the defects in source code that may cause performance problems, this paper designs and achieves a performance testing tool based on static analysis method. The experiments of detecting several open source projects using our testing tool demonstrate that it can quickly find the defects in source code with high accuracy rate. The result of defection removing shows that it can significantly reduce the memory consumption of software, and it can effectively improve software performance. &copy; (2014) Trans Tech Publications, Switzerland.},
key = {Static analysis},
keywords = {Application programs;Computer programming languages;Defects;Tools;},
note = {Code analysis;Memory consumption;Open source projects;Performance optimizations;Performance problems;Performance testing;Software performance;Static analysis method;},
URL = {http://dx.doi.org/10.4028/www.scientific.net/AMM.490-491.1553},
} 


@inproceedings{1995012422340,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Prototype-driven approach to application-level performance testing: A case study of a large finance application},
journal = {Proceedings of the Symposium on Assessment of Quality Software Development Tools},
author = {Grossman, D. and Staton, C.J. and Bailey, B. and McCabe, M.C. and Latts, A. and Frieder, O. and Bock, C. and Roberts, D.},
year = {1994},
pages = {125 - 135},
address = {Washington, DC, USA},
abstract = {We present an approach to application-level performance testing. This uses a popular test tool, TPNS (Teleprocessing Network Simulator) to simulate performance of an application. Our approach hinges upon a simple prototype to verify that the system performance falls within acceptable bounds. Once the initial prototype is developed, detailed tuning may take place. We present a case study in which we tested the performance of a large finance application. This approach led to critical performance tuning improvement. Due to this improvement, the average user response time in our simulations was reduced from 30 seconds to under 1.5 seconds. This simulation has been verified by actual system usage during the first two months of live operation in which the average response time has indeed been under 1.5 seconds.},
key = {Database systems},
keywords = {Computer aided analysis;Computer networks;Computer operating systems;Computer simulation;Computer software selection and evaluation;Data processing;Product design;Program diagnostics;Response time (computer systems);Standards;Systems analysis;},
note = {Application level testing;Database management systems (DMBS);Initial production usage performance problems;Performance tuning;System level testing;Teleprocessing network simulator (TPNS);},
} 


@article{20120714765457,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design and performance testing of moving coil linear motor for Stirling generator},
journal = {Dianji yu Kongzhi Xuebao/Electric Machines and Control},
author = {Jia, Hong-Shu and Hong, Guo-Tong and Chen, Hou-Lei},
volume = {15},
number = {12},
year = {2011},
pages = {21 - 25},
issn = {1007449X},
abstract = {In order to develop linear motor for free piston Stirling generator, moving coil linear motor structure was designed. Magnetic field of the motor was obtained by finite element simulation and testing, and the output characteristic were studied. The calculated results of magnetic field using the finite element software ANSYS meet the experimental results, and the results show that magnetic flux density achieved 626 mT at the air-gap is 6 mm. Experimental system for testing output characteristics of the moving coil motor was established. Output characteristics testing of moving coil linear motor was conducted. The results show that effective output voltage increases linearly with displacement at constant magnetic field strength, coil length and moving frequency. The slope is the function of coil impedance and external load. Moreover, the output voltage increases at load resistance under conditions of same input voltage at a constant coil displacement. The calculatied natrual frequency is 16.5 Hz. The output current of the motor decreases with the increasing of work frequency away from the system natural frequency, and the efficiency of the system is 20%.<br/>},
key = {Linear motors},
keywords = {Finite element method;Magnetic devices;Magnetic fields;Magnetic flux;Pistons;},
note = {Constant magnetic fields;Experimental system;Finite element simulations;Finite element software;Frequency;Moving coils;Output characteristics;Stirling generators;},
} 


@inproceedings{20064610243750,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance test tool for RFID middleware: Parameters, design, implementation, and features},
journal = {8th International Conference Advanced Communication Technology, ICACT 2006 - Proceedings},
author = {Lee, Jongyoung and Kim, Naesoo},
volume = {1},
year = {2006},
pages = {149 - 152},
address = {Phoenix Park, Korea, Republic of},
abstract = {Recently, Major software vendors(such as Sun, IBM, Oracle) introduce RFID middleware product which process RFID tag data cause of extending RFID related technology and application. RFID middleware which receives tag data from reader, internal process receiving data, and transmit result to application acts key role of applying RFID technology to application. In this paper, we define parameters for RFID middleware performance and introduce design of performance test tool of RFID middleware.},
key = {Middleware},
keywords = {Computer software;Data reduction;Identification (control systems);Parameter estimation;},
note = {Performance test tool;RFID technology;Software testing;},
} 


@inproceedings{20093412261037,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance test of a 100 kW HTS generator operating at 67 K-77 K},
journal = {IEEE Transactions on Applied Superconductivity},
author = {Wen, Huaming and Bailey, Wendell and Goddard, Kevin and Al-Mosawi, Maitham and Beduz, Carlo and Yang, Yifeng},
volume = {19},
number = {3},
year = {2009},
pages = {1652 - 1655},
issn = {10518223},
abstract = {A systematic test program is in progress to fully characterize a 100 kW HTS synchronous generator which was successfully constructed in 2004. The machine was one of the first HTS synchronous generator/motors to operate at liquid nitrogen temperatures while achieving a power rating relevant to practical application. It has a conventional 3-phase stator and a cold rotor with a magnetic core and a superconducting winding consisting of 10 HTS Bi2223 pancake coils separated by magnetic flux diverters. The test program includes a series of tests at various speeds, field currents and temperatures (65 K-77 K) with the machine in open circuit to determine the critical currents of the HTS rotor, the waveform and harmonic characteristics of generated voltage at different levels of iron saturation. Stationary measurements of the rotor critical current are carried out using dc current in the stator windings to quantify the influence of stator field on the performance of the superconducting winding. The voltages and temperatures of the rotor are measured using a radio frequency telemetry system. &copy; 2009 IEEE.<br/>},
key = {Electric generators},
keywords = {AC generator motors;High temperature superconductors;Rotors (windings);Software testing;Stators;Superconducting coils;Superconducting devices;Synchronous generators;Winding;},
note = {Bscco coils;Harmonic characteristics;High temperature superconducting;HTS motors;Liquid nitrogen temperature;Performance tests;Rotating superconducting machines;Superconducting winding;},
URL = {http://dx.doi.org/10.1109/TASC.2009.2017832},
} 


@article{20135217144592,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {High speed NAND Flash image recorder load test system},
journal = {Hongwai yu Jiguang Gongcheng/Infrared and Laser Engineering},
author = {Xu, Yonggang and Ren, Guoqiang and Wu, Qinzhang and Wu, Wei},
volume = {42},
number = {10},
year = {2013},
pages = {2858 - 2864},
issn = {10072276},
abstract = {In order to determine the stability of the NAND Flash image recorder and the peak recording speed, reducing the amount of manual testing, a new load test system was designed. To solve the problem of stability test, speed load model based on exponential regression and test time control model based on the lognormal distribution were proposed. To test the peak recording speed, the test methods combining hardware with software based on climbing search algorithm and speed dichotomy was praser. The hardware data generator was designed, whose speed was software adjustable according to valid data duty cycle mechanism. Climbing search algorithm rough determined the peak recording speed range, and then the speed dichotomy approached the peak recording speed; the test report was transferred to PC for display through the serial port and Gigabit Ethernet. Experimental results show that the speed load regulation accuracy is up to 0.1 MB/s; the speed load range is from 0 to 1600 MB/s; verification of read back data using hardware has no clock delay; the tested NAND Flash recorder connecting with 8 SLC NAND Flash chips has the peak recording speed of 240.12 MB/s; under the speed load 200 MB/s, the NAND Flash record controller can work well continuously for more than 24 h. The load test system can be used for load test of other transmission and recording system because of its universal architecture.},
key = {Search engines},
keywords = {Convergence of numerical methods;Hardware;Image recording;Learning algorithms;Load testing;Software testing;Speed;System stability;},
note = {Climbing search;Exponential regression;Gigabit Ethernet;Log-normal distribution;NAND Flash;Recording systems;Search Algorithms;Test systems;},
} 


@article{20133816763078,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing system of trailer axle based on virtual instrument},
journal = {Nongye Gongcheng Xuebao/Transactions of the Chinese Society of Agricultural Engineering},
author = {Wu, Weibin and Zhao, Ben and Hong, Tiansheng and Zhao, Wenfeng and Deng, Xiaoling and Zhu, Yuqing and Ruan, Shaomeng},
volume = {29},
number = {SUPPL1},
year = {2013},
pages = {25 - 31},
issn = {10026819},
abstract = {The axle is one of the most important components directly relating the safety operation of vehicles. However, the testing method of axle on site used in China is backward and inefficient, while checking failures occur now and then. But the theory of reliability design of fatigue, which has been well developed, is difficult to be applied to the test of axle on site. In recent years, the computing automotive technology is advocated at abroad to solve the complicated problem of how to put the reliability analysis of fatigue into practice. This paper realized the 3D simulation of testing system through the Pro/E software as well as constructed the system, which was based on the trailer axle testing system prototype. The system hardware was comprised of support, guide, sensors, AC servo motor and servo driver; meanwhile, the system software adapted the modularized idea in order to divide the monolithic construction into five parts, including main operation control module and 4 testing modules. Every testing module was constituted by 5 submodules. The system software program was written by LabVIEW. It drove the linkage device by controlling the rotation of the servo motor and loaded the simulated axle through two pressure heads, then the displacement and pressure were collected as feedback through the data acquisition card. The displacement-voltage linear relationship of A/B pressure head was obtained through experiments on displacement sensors before system test. By calibrating the straight-line equation, the result was that the maximum locating relative error is 5.207%, and the absolute value of average relative error was 1.4%. The voltage-load linear relationship of A/B pressure head was obtained by accurate positioning of load. Analyzed by software SPSS, in the equation of the load stress and voltage linear regression, the result was that R &gt; 0.994, Sig. &lt; 0.05, thus regression was significant. According the constructed testing system, the performance of fatigue, stiffness, strength, and stress of the simulated axle were tested and analyzed. In fatigue test, flaw occurred after 821 times vibration and efficacy was lost after 1067 times vibration; in stiffness test, spot D almost stayed unchanged and the displacements of spot C and E ranged from 60 to 63 mm; in strength test, the maximum displacement of sensor E was 66.622 mm; in stress test, the maximum displacement of spot E was 66.751 mm, and the maximum stress was 259.444 MPa. The system was steady. The simulated test had been lasting for one month and no bug was found. Therefore, the result generally meets the project requirement.},
key = {Axles},
keywords = {AC generator motors;Computer software;Digital devices;Fatigue of materials;Fatigue testing;Instruments;Reliability theory;Sensors;Servomotors;Stiffness;},
note = {Automotive technology;Average relative error;Data acquisition cards;Intensity;LabViEW;Linear relationships;Maximum displacement;Performance tests;},
URL = {http://dx.doi.org/10.3969/j.issn.1002-6819.2013.z1.004},
} 


@inproceedings{20095212580689,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Stress testing the Logical Decision Making Server of a surveillance system},
journal = {1st International Conference on Advances in System Testing and Validation Lifecycle, VALID 2009},
author = {Nieminen, Mikko and Raty, Tomi and Palokangas, Jukka},
year = {2009},
pages = {98 - 103},
address = {Porto, Portugal},
abstract = {The current generation of distributed and automated physical location surveillance systems faces high demands for robustness and reliability. We present and evaluate the design of the Logical Decision Making Server (LDMS), a rule-based automated decision making component used in the Single Location Surveillance Point (SLSP) system. To validate the robustness of the LDMS design for operation in the SLSP environment, we design and conduct a stress test experiment in which large load of TCP/IP input messages is sent instantaneously to the LDMS prototype implementation using the Nethawk EAST software. The stress test results are compared to measurements obtained during a real-life scenario. The LDMS is observed to withstand a significant amount of load without crashing, and its performance is can be considered sufficient for the SLSP system needs. A detailed analysis of results however shows an increase in the latency resulting from an extreme temporal load. We identify potential areas in the design to be improved if demands for higher response rates arise. The research is based on the construction of the related publications and technologies, and the results are established from the testing and validation of the implemented LDMS within the SLSP system. &copy; 2009 IEEE.<br/>},
key = {Decision making},
keywords = {Life cycle;Monitoring;Security systems;Software testing;Space surveillance;System theory;},
note = {Automated decision making;Component;Current generation;Logical decisions;Physical locations;Prototype implementations;Stress Testing;Surveillance systems;},
URL = {http://dx.doi.org/10.1109/VALID.2009.16},
} 


@inproceedings{20171703611671,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {LTTC: A load testing tool for cloud},
journal = {Advances in Intelligent Systems and Computing},
author = {Geetha Devasena, M.S. and Krishna Kumar, V. and Kingsy Grace, R.},
volume = {508},
year = {2017},
pages = {689 - 698},
issn = {21945357},
address = {Ahmedabad, India},
abstract = {Software testing is the process of software engineering to free the software from bugs. Load testing is one of the techniques in software testing and is used to find the maximum load that software can handle without affecting its performance. Load testing is used to test the cloud services that are running in a cloud. All the resources in a cloud are used by the cloud users based on their demand. Using cloud, it is easy to gather the required load for a particular application by forming clusters. If the required load is coming from different clusters and it is not known quantitatively then the problem of load balancing is raised. The proposed load testing tool avoids the problem of getting unequal loads coming from different clusters by distributing the same amount of load to all the clusters. Also the proposed load testing tool for cloud is used to find the maximum number of simultaneous users for a particular cloud system is to handle. &copy; Springer Nature Singapore Pte Ltd. 2017.},
key = {Load testing},
keywords = {Program debugging;Resource allocation;Software engineering;Software testing;},
note = {Cloud services;Cloud systems;Cloud testing;Maximum load;Running-in;},
URL = {http://dx.doi.org/10.1007/978-981-10-2750-5_70},
} 


@inproceedings{20113314234219,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Home care web services evaluation by stress testing},
journal = {Communications in Computer and Information Science},
author = {Krejcar, Ondrej and Motalova, Leona},
volume = {171 CCIS},
year = {2011},
pages = {238 - 248},
issn = {18650929},
abstract = {Development of software applications result in complete application or solution. The last phase of developing process is the final testing of developed solution. The goal of our paper has focused on this problem in case of web services. The developed testing application can be used for any other software solutions with web service interface. The developed test environment, including application developed for the stress testing is based on Microsoft .NET Framework technology. Our stress testing application allows testing of selected problem areas to find any limitations before the tested developing solution will be set up at customer. By the help of our test application, the hardware solution for the server was selected on the base of selected home care agency needs. &copy; 2011 Springer-Verlag.<br/>},
key = {Web services},
keywords = {Application programs;Hardware;Mobile devices;Response time (computer systems);Software testing;Websites;},
note = {Developing process;Developing solutions;Hardware solutions;Software applications;SQL servers;Stress Testing;Test applications;Web service interface;},
URL = {http://dx.doi.org/10.1007/978-3-642-22729-5_20},
} 


@inproceedings{1998254178939,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing in a client-server environment},
journal = {CMG Proceedings},
author = {Merton, Joseph K.},
volume = {1},
year = {1997},
pages = {594 - 601},
address = {Orlando, FL, USA},
abstract = {As an enterprise grows and adapts to changing business conditions, performance of client-server systems is affected by workload changes caused by growth, functional application changes, and configuration changes in hardware, software, or network topology. This paper presents a case study of the implementation of performance testing in a client-server environment. It describes performance testing objectives, evaluation and selection of performance testing software, construction of a performance testing environment, construction and execution of test cases, and evaluation of results.},
key = {Online systems},
keywords = {Computer aided software engineering;Computer networks;Computer software selection and evaluation;Response time (computer systems);Systems analysis;},
note = {Client/server environment;},
} 


@inproceedings{20104213294741,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Distributed agent-based performance testing framework on Web Services},
journal = {Proceedings 2010 IEEE International Conference on Software Engineering and Service Sciences, ICSESS 2010},
author = {Hao, Dan and Chen, Yinghui and Tang, Fan and Qi, Feng},
year = {2010},
pages = {90 - 94},
abstract = {Web Services are applied widely in the field of information technology, and performance testing for Web Services applications has become an important problem. This paper introduces the method of performance testing, and proposes a framework of agent-based performance testing on Web Services, which includes TestFlow Generator, Scenario Creator, Test Manager, Load Generation Agent and Test Analyzer. And the implementation of kernel modules in the framework is introduced especially. To realize the load allocation to distributed Load Generation Agents from Test Manager, a queue-based allocation strategy is given. &copy; 2010 IEEE.<br/>},
key = {Web services},
keywords = {Load testing;Managers;Software engineering;Websites;},
note = {Agent based;Allocation strategy;Distributed agents;Distributed loads;Kernel modules;Load allocation;Performance testing;Performance testing framework;},
URL = {http://dx.doi.org/10.1109/ICSESS.2010.5552290},
} 


@inproceedings{20121214869057,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design and implementation of cloud-based performance testing system for web services},
journal = {Proceedings of the 2011 6th International ICST Conference on Communications and Networking in China, CHINACOM 2011},
author = {Zhang, Li and Chen, Yinghui and Tang, Fan and Ao, Xiong},
year = {2011},
pages = {875 - 880},
address = {Harbin, China},
abstract = {Nowadays testing plays an important role in software development process. While software testing is expensive and time-consuming, sufficient testing is hard, especially for a distributed system using web services technique in the real circumstance. The development of cloud computing provides us new ideas to solve these testing problems. To address these issues, we propose a framework which integrates cloud computing and performance testing technologies. In this paper, first we present the architecture of the cloud-based performance testing system for web services (CPTS), which is a portable, extensible and easy-to-use framework for generating and submitting test workloads to computing clouds. Then, we show the process how to use CPTS to run a performance test and present the concept of dynamic migration in CPTS. Finally, we present our experiences with CPTS in Amazon EC2. We found that the CPTS allows a user to easily set up and test a web services system on the cloud and improve test effectively. &copy; 2011 IEEE.<br/>},
key = {Web services},
keywords = {Cloud computing;Software design;Software testing;Testing;Virtual machine;Websites;},
note = {Cloud-based;Computing clouds;Design and implementations;Distributed systems;Dynamic migration;Performance testing;Performance tests;Software development process;},
URL = {http://dx.doi.org/10.1109/ChinaCom.2011.6158278},
} 


@inproceedings{20170503293412,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Study of performance testing of information system based on domestic CPU and OS},
journal = {Proceedings - 2016 3rd International Conference on Trustworthy Systems and Their Applications, TSA 2016},
author = {Li, Dong and Xiong, Jing and Yang, Chunhui},
year = {2016},
pages = {112 - 116},
address = {Wuhan, Hubei, China},
abstract = {In order to evaluate the performance of of information system based on domestic CPU and OS, through the introduction of the background of basic hardware and software based on domestic, we expound the domestic information system performance testing principle and method, according to the testing results of existing mature commercial performance testing tool LoadRunner can not reflect the user experience of time, and can not be directly used for testing the information system which based on domestic CPU/OS, this paper put forward the two kinds of testing schemes that base on user experience of LoadRunner and JMeter domestic information system performance test, and test two kinds of improved schemes, through the comparison of the test data and the user experience time of the two schemes, the variance of the test scheme based on JMeter is smaller than LoadRunner test scheme 70.49%. The results show that the test results of the JMeter scheme are more close to the user experience than LoadRunner. &copy; 2016 IEEE.},
key = {Software testing},
keywords = {Information systems;Testing;},
note = {Domistic Operating System(OS);Hardware and software;Improved scheme;Infrastructure software;Performance testing;Performance tests;Test tools;User experience;},
URL = {http://dx.doi.org/10.1109/TSA.2016.27},
} 


@inproceedings{20181504992142,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A new method for SSD black-box performance test},
journal = {Progress in Electromagnetics Research Symposium},
author = {Xie, Qiyou},
year = {2017},
pages = {1116 - 1122},
issn = {15599450},
address = {St. Petersburg, Russia},
abstract = {In the past decade, NAND Flash has stood out from numerous non-volatile storage mediums. The NAND Flash based Solid State Disk (SSD) has been widely used in many storing required fields such as embedded applications and data center. A new and efficient SSD black-box performance test method is revising in this paper. The designed test system contains time parameter getter, excitation signal generator, buffer unit, write/read controller and SSD. With the application of the proposed method, not only the influence of TRIM mechanism could been analyzed, but also the test precision is increased significantly. To verify the validity and performance of our test system, the IOPS, response time and write/read bandwidth of the universal testing software (IOMETER, HDTUNE, etc.) and SATA protocol analyzer are presented and compared with our method in detail.<br/> &copy; 2018 Electromagnetics Academy. All rights reserved.},
key = {Software testing},
keywords = {Flash-based SSDs;Memory architecture;NAND circuits;Testing;},
note = {Embedded application;Excitation signals;Performance tests;Protocol analyzers;Solid state disks (SSD);Testing software;Time parameter;Trim mechanisms;},
URL = {http://dx.doi.org/10.1109/PIERS.2017.8261912},
} 


@inproceedings{20143718153940,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing open source products for the TMT event service},
journal = {Proceedings of SPIE - The International Society for Optical Engineering},
author = {Gillies, K. and Bhate, Yogesh},
volume = {9152},
year = {2014},
pages = {The Society of Photo-Optical Instrumentation Engineers (SPIE) - },
issn = {0277786X},
address = {Montreal, QC, Canada},
abstract = {The software system for TMT is a distributed system with many components on many computers. Each component integrates with the overall system using a set of software services. The Event Service is a publish-subscribe message system that allows the distribution of demands and other events. The performance requirements for the Event Service are demanding with a goal of over 60 thousand events/second. This service is critical to the success of the TMT software architecture; therefore, a project was started to survey the open source and commercial market for viable software products. A trade study led to the selection of five products for thorough testing using a specially constructed computer/network configuration and test suite. The best performing product was chosen as the basis of a prototype Event Service implementation. This paper describes the process and performance tests conducted by Persistent Systems that led to the selection of the product for the prototype Event Service. &copy; 2014 SPIE.<br/>},
key = {Open systems},
keywords = {Commerce;Middleware;Open source software;Software design;Software testing;},
note = {Commercial market;Distributed systems;Open source products;Performance requirements;Performance testing;Performance tests;Software products;Software services;},
URL = {http://dx.doi.org/10.1117/12.2057148},
} 


@inproceedings{20101712879826,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Software performance testing scheme using virtualization technology},
journal = {Proceedings of the 4th International Conference on Ubiquitous Information Technologies and Applications, ICUT 2009},
author = {Kim, Gwang-Hun and Moon, Hui-Choun and Song, Gi-Pyeung and Shin, Seok-Kyu},
year = {2009},
address = {Fukuoka, Japan},
abstract = {In this paper, we propose software performance testing scheme using virtualization technology. Generally, people have used software performance testing tool such as load runner and silk performer. However, people should perform software performance testing manually in case of the situation that people cannot use testing tool. It needs a lot of resources such as human resource and computing resource. Therefore, we propose software performance testing scheme using virtualization technology to reduce resource consumption. Proposed scheme can reduce computer resource consumption because virtualization technology can make a number of virtual computers with a small number of physical computers. Also proposed scheme can reduce human resource consumption because, in proposed scheme, management computer can control keyboard and mouse of virtual computers automatically. Simulation result shows that proposed scheme has possibility to be used for software performance testing. &copy; 2009 IEEE.<br/>},
key = {Software testing},
keywords = {Computer resource management;Human resource management;Load testing;Virtual reality;Virtualization;},
note = {Computer resources;Computing resource;Performance testing;Resource consumption;Software performance engineerings;Software performance testing;Test Automation;Virtualization technologies;},
URL = {http://dx.doi.org/10.1109/ICUT.2009.5405721},
} 


@article{20134817030778,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Automation testing software that aid in efficiency increase of regressionprocess},
journal = {Recent Patents on Computer Science},
author = {Bhatt, Alok N. and Babu Rajasekhara, M. and Bhatt, Anuja J.},
volume = {6},
number = {2},
year = {2013},
pages = {107 - 114},
issn = {18744796},
abstract = {Accuracy of any software release to the market depends on how efficiently it has been debugged. Debugging is a systematic procedure, used to identify and figure out the cause of defects or any anomaly that the software has and make the software behave as expected. The issues generated by the customer of any company are logged into a database, wherein issues are picked up selected, solved and reverted back to the customers. After solving an issue, it may happen that the issue affects other components which results into a greater number of bugs. The resultant issues are called regression issues. The objective of this paper is to propose and implement a client-server, object-oriented, multiple plat form supporting frame work called RATS Framework which automates the process of regression and thereby helps debug engineers to solve time-consuming regression issues at a faster rate. It automates the process with the help of web-scrapping algorithm (W-S-A) that includes HTML/XML parsing to extract the needed content in the form of GUI-Web Objects, than using Network-Binary Search Algorithm (N/W-BS-A) and Change Finder Algorithm, a variant of Binary Search method, RATS finds out the nearest pass/fail driver build and change in the driver build that cause the new defect in the driver respectively. Because the RATS Framework does this at runtime, client-server approach has to be followed making use of Remote Identification and Installation-Algorithm. Hence RATS framework is a cost effective and time efficient approach for regression issues. The present article has the discussion of few of the patents relevant to automation testing software. &copy; 2013 Bentham Science Publishers.},
key = {Program debugging},
keywords = {Algorithms;Cost effectiveness;Defects;Graphical user interfaces;Object oriented programming;Rats;Regression analysis;Software testing;},
note = {Client server;Cost effective;GUI-Web objects;Multiple platforms;Object oriented;Time-efficient;},
} 


@inproceedings{20182105218919,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Enhancement of automation testing system using Yocto project},
journal = {Proceedings of the International Conference on Electronics, Communication and Aerospace Technology, ICECA 2017},
author = {Khandelwal, Harita and Mankodi, Parthesh and Prajapati, Ritesh},
volume = {2017-January},
year = {2017},
pages = {697 - 700},
address = {Coimbatore, India},
abstract = {Nowadays, in industries, Testing has become one of the important tasks. Testing is necessary for an effective performance of product and software applications. When companies having a mass production of hardware boards, it is necessary to do testing of each and every module of hardware like SPI, UART, GPIO, PWM, ADC, USB, Ethernet. If we do testing manually then it will significantly take more time, which we can be reduced by automation testing. But the solution is not an automation testing because automation testing also requires the same amount of system, for example for 300 boards 300 system is required. The only difference in manual and automation testing is that in automation testing it will require less human effort. Now we are focusing more on developing a solution in which many tests can be done on one single system i.e. for 300 boards only one system is required for testing hence this problem can be solved by Yocto Project. Yocto project have build the tool named Bitbake which is written in Python language, which works on multithreading and scheduling so that simultaneously you can test more boards on a single system. In this paper we did automation testing of GPIO pins using Yocto project.<br/> &copy; 2017 IEEE.},
key = {Software testing},
keywords = {Application programs;Automation;Hardware;},
note = {Automation testing;Bitbake;Effective performance;Mass production;Open embedded;PYTHON language;Software applications;Yocto project;},
URL = {http://dx.doi.org/10.1109/ICECA.2017.8203630},
} 


@inproceedings{20072610680510,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Patterns and tools for performance testing},
journal = {2006 IEEE International Conference on Electro Information Technology},
author = {Stankovic, Nenad},
year = {2006},
pages = {152 - 157},
address = {East Lansing, MI, United states},
abstract = {The growth of software applications in size and complexity is being followed by a number of specific nonfunctional requirements such as portability, interoperability, and availability on various platforms. Most often, these have been addressed by middleware or programming environment. In addition, easy customizability, adaptability, and sharing of components facilitates the development cycle. These should be understood and applied in a broader sense, i.e. to byproducts created during the development process such as programs for functional and performance testing. Much time is spent on developing test programs but their quality and quality of thus obtained results varies largely if the process is not standardized and automated. In this paper we present our experience with performance testing of a large scale suite of gateways that are used for the seamless integration of heterogeneous communication networks. We analyze the commercial and public domain tools for load generation and motivate our decision to define an in-house framework and build a distributed tool for performance, testing that is also not restricted by licensing issues and is readily available to everyone involved. Our tool is built on Visper, the object-oriented distributed programming middleware. The suitability and adaptability of the Visper model for rapid application development and the quality of produced result have proven our decision correct.},
key = {Software testing},
keywords = {Computer aided software engineering;Data transfer rates;Gateways (computer networks);Interoperability;Middleware;Object oriented programming;Process control;},
note = {Distributed tools;Heterogeneous communication networks;Object oriented distributed programming;},
URL = {http://dx.doi.org/10.1109/EIT.2006.252109},
} 


@inproceedings{20073910823930,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Performance testing of microturbine generator system fueled by biodiesel},
journal = {Proceedings of the ASME Turbo Expo},
author = {Chiang, Hsiao-Wei D. and Chiang, I-Che and Li, Hsin-Lung},
volume = {1},
year = {2007},
pages = {459 - 466},
address = {Montreal, Que., Canada},
abstract = {Using microturbine generator systems for distributed power generation has become the recent trend. To face the impact of the global energy crisis, one of the options is to use biofuels including biodiesel. To this end, this program is to perform study on biodiesel microturbine testing and analysis. A 150kW microturbine generator set with twin rotating disk regenerators was used. Designed as a vehicular microturbine engine, the twin rotating ceramic disk regenerators dramatically improve fuel consumption by transferring heat energy from the exhaust gas stream to compressor discharge. This paper involved testing of the microturbine generator set at different load conditions using 10%-30% biodiesel fuel. A software program was used to predict the performance of the microturbine generator set at different operating conditions in order to compare with the test results. Both biodiesel and petrodiesel fuels are used on the microturbine generator system in this study and the results will be compared. Copyright &copy; 2007 by ASME.},
key = {Turbines},
keywords = {Biodiesel;Compressors;Electric generators;Fuel consumption;Rotating disks;Thermal energy;Vehicles;},
note = {Compressor discharges;Global energy crisis;Rotating disk regenerators;},
URL = {http://dx.doi.org/10.1115/GT2007-28075},
} 


@article{2005509546962,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Stereo vision measurement system qualification and preliminary performance test results},
journal = {European Space Agency, (Special Publication) ESA SP},
author = {Finotello, R. and Losito, S. and Mondellini, C. and Rossi, G. and Zampato, M.},
number = {603},
year = {2005},
pages = {617 - 623},
issn = {03796566},
address = {Munich, Germany},
abstract = {The paper presents the Stereo Vision Measurement System. The system has been developed at proto-flight model level and features the stereo vision processing for in space measurement of the environment geometry. The SVMS subsystems and the relevant qualification tests are presented. Preliminary evaluations of the performances of the software system by using the laboratory prototype are included.},
key = {Computer software},
keywords = {Space research;Stereo vision;},
note = {Environment geometry;Space measurement;Stereo vision processing;},
} 


@inproceedings{20122515136087,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Peer-to-peer load testing},
journal = {Proceedings - IEEE 5th International Conference on Software Testing, Verification and Validation, ICST 2012},
author = {Meira, Jorge Augusto and Almeida, Eduardo Cunha De and Le Traon, Yves and Sunye, Gerson},
year = {2012},
pages = {642 - 647},
address = {Montreal, QC, Canada},
abstract = {Nowadays the large-scale systems are common-place in any kind of applications. The popularity of the web created a new environment in which the applications need to be highly scalable due to the data tsunami generated by a huge load of requests (i.e., connections and business operations). In this context, the main question is to validate how far the web applications can deal with the load generated by the clients. Load testing is a technique to analyze the behavior of the system under test upon normal and heavy load conditions. In this work we present a peer-to-peer load testing approach to isolate bottleneck problems related to centralized testing drivers and to scale up the load. Our approach was tested in a DBMS as study case and presents satisfactory results. &copy; 2012 IEEE.<br/>},
key = {Load testing},
keywords = {Large scale systems;Peer to peer networks;Software testing;Verification;},
note = {Bottleneck problem;Business operation;Heavy load conditions;Peer to peer;Scale-up;Study case;System under test;WEB application;},
URL = {http://dx.doi.org/10.1109/ICST.2012.153},
} 


@article{20091011939177,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {CLIF, a framework based on Fractal for flexible, distributed load testing},
journal = {Annales des Telecommunications/Annals of Telecommunications},
author = {Dillenseger, Bruno},
volume = {64},
number = {1-2},
year = {2009},
pages = {101 - 120},
issn = {00034347},
abstract = {The context of this work is performance evaluation of IT systems based on load testing. It typically consists in generating a flow of requests on a system under test, and to measure response times, request throughput, or computing resource usage. A quick overview of available load testing platforms shows that there exist hundreds of such platforms, including in the open source domain. However, many testers still tend to develop their own ad hoc load testing tooling. Why? This paper starts by looking for possible answers to this question, in order to introduce the CLIF load injection framework, which intends not to be yet another load testing platform. Based on the Fractal component model, the CLIF open source project aims at addressing key issues such as flexibility, adaptation, and scalability. We give here details about CLIF's architecture and associated tools as well as some feedback from a bunch of practical utilizations. &copy; 2008 Institut TELECOM and Springer-Verlag.<br/>},
key = {Load testing},
keywords = {Fractals;Open source software;Software testing;},
note = {Component-based software engineering;Computing resource;Distributed systems;Fractal component models;IS performance evaluation;Open source projects;Performance evaluations;Testing platforms;},
URL = {http://dx.doi.org/10.1007/s12243-008-0067-9},
} 


@inproceedings{20134416927580,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Keyword driven automation test},
journal = {Applied Mechanics and Materials},
author = {Wu, Zhong Qian and Li, Jin Zhe and Liao, Zeng Zeng},
volume = {427-429},
year = {2013},
pages = {652 - 655},
issn = {16609336},
address = {Chongqing, China},
abstract = {In order to improve software reusability of automated test scripts, presents a keyword-driven test automation framework (KDTFA). First, the current existing automated testing framework for inductive analysis; then raised KDTFA system architecture; finally, an example of the android interface application framework and the existing framework for KDTFA actual contrast verification results show that the framework has a reduced scale of test scripts to improve the overall test efficiency and other advantages. &copy; (2013) Trans Tech Publications, Switzerland.},
key = {Testing},
keywords = {Automation;Computer software reusability;Industrial electronics;Information technology;Mechanical engineering;},
note = {Automated testing;Interface applications;KDTFA;Keyword driven;Mobile;System architectures;Test automation frameworks;Verification results;},
URL = {http://dx.doi.org/10.4028/www.scientific.net/AMM.427-429.652},
} 


@inproceedings{20110713665094,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Development of an improved GUI automation test system based on Event-flow graph},
journal = {Proceedings - International Conference on Computer Science and Software Engineering, CSSE 2008},
author = {Yongzhong, Lu and Danping, Yan and Songlin, Nie and Chun, Wang},
volume = {2},
year = {2008},
pages = {712 - 715},
address = {Wuhan, Hubei, China},
abstract = {A more highly automated graphic user interface (GUI) test model, which is based on the event-flow graph, is proposed. In the model, an automation tool is first used to carry out reverse engineering for a GUI test sample so as to obtain the event-flow graph. Then an improved ant colony optimization algorithm and a goal-directed searching approach are adopted to create GUI test sample cases. Moreover, a corresponding prototype system based on Microsoft UI automation framework is developed. &copy; 2008 IEEE.<br/>},
key = {Flow graphs},
keywords = {Ant colony optimization;Automation;Graphic methods;Graphical user interfaces;Reverse engineering;Software engineering;},
note = {Automation tests;Automation tools;Event-flow graph;Goal directed;Graphic user interface (GUI);Improved ant colony optimization;Prototype system;Test Modeling;},
URL = {http://dx.doi.org/10.1109/CSSE.2008.1336},
} 


@inproceedings{20101312803729,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Using TTCN-3 in performance test for service application},
journal = {Proceedings - 7th ACIS International Conference on Software Engineering Research, Management and Applications, SERA09},
author = {Shan, Min and Wang, Xianrong and Zhao, Lijun and Guo, Lili},
year = {2009},
pages = {253 - 258},
address = {Haikou, China},
abstract = {Service applications are applicable to provide services for requests of users from network. Due to the fact that they have to endure a big number of concurrent requests, the performance of service applications running under specific arrival rate of requests should be assessed. To measure the performance of a service application, Multi-party testing context is needed to simulate a number of concurrent requests and collect the responses. TTCN-3 is a test description language; it provides basic language elements for multi-party testing context that can be used in performance tests. This paper proposes a general approach of using TTCN-3 in multiparty performance testing service application. To this aim, a model of service application is presented, and performance testing framework for service applications is discussed. This testing framework is realized for a typical application by developing a reusable TTCN-3 abstract test suite. &copy; 2009 IEEE.<br/>},
key = {Application programs},
keywords = {Computer software reusability;Engineering research;Testing;},
note = {Concurrent requests;Description languages;Performance testing;Performance testing framework;Service applications;Testing framework;TTCN-3;Typical application;},
URL = {http://dx.doi.org/10.1109/SERA.2009.18},
} 


@inproceedings{20140617272628,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Comparison of hardware based and software based stress testing of memory IO interface},
journal = {Midwest Symposium on Circuits and Systems},
author = {Querbach, Bruce and Puligundla, Sudeep and Becerra, Daniel and Schoenborn, Zale T. and Chiang, Patrick},
year = {2013},
pages = {637 - 640},
issn = {15483746},
address = {Columbus, OH, United states},
abstract = {In post-silicon testing and validation of circuit functionality, an effective IO stress pattern can identify bugs quickly and provide adequate test coverage. A lot of work has been done to identify the right stress patterns specific to each IO interface. While some patterns can be generic enough to apply to all IOs, other patterns are interface topology specific. In addition to identifying the worst-case pattern, tradeoffs between test-time and test coverage must be made depending on the test goals. Pseudo Random Bit Stream (PRBS) generators are commonly used to generate test patterns because of the adequate frequency content in the PRBS patterns, the ease of implementation, and minimal gate count. This paper introduces an Advanced Pattern Generator and Checker (APGC) based on PRBS that retains all the aforementioned advantages. The APGC was implemented for a DDR memory interface where different LFSRs beat against each other spatially on neighboring IO lanes while rotating this form of aggressor-victim pattern in time. The results of the APGC stress patterns are compared to a form of advanced software-based learning algorithm based patterns that exhaustively search this complete parameter space. The comparison of APGC to software showed that the measured bit error rate (BER) plotted on a Q-scale of both methods is similar for the Receiver side. On the Transmitter side, APGC showed less eye opening than the software. In addition to the margin comparison, on the test execution side, APGC can speed up the test and validation execution time compared to the software by 32 to 2048 times depending on aggressor victim lane width of 8 to 64 lanes. &copy; 2013 IEEE.<br/>},
key = {Software testing},
keywords = {Bit error rate;Testing;},
note = {Advanced softwares;Aggressor-victim;Circuit functionality;Frequency contents;Parameter spaces;Pattern generator;Pseudo random bit stream;Worst case pattern;},
URL = {http://dx.doi.org/10.1109/MWSCAS.2013.6674729},
} 


@inproceedings{20181104908213,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {VST: A virtual stress testing framework for discovering bugs in SSD flash-translation layers},
journal = {IEEE/ACM International Conference on Computer-Aided Design, Digest of Technical Papers, ICCAD},
author = {Liu, Ren-Shuo and Chang, Yun-Sheng and Hung, Chih-Wen},
volume = {2017-November},
year = {2017},
pages = {283 - 290},
issn = {10923152},
address = {Irvine, CA, United states},
abstract = {Flash translation layers (FTLs) are the core embedded software (also known as firmware) of NAND flash-based solid-state drives (SSDs). The relentless pursuit of high-performance SSDs renders FTLs increasingly complex and intricate. Therefore, testing and validating FTLs are crucial and challenging tasks. Directly testing and validating FTLs on SSD hardware are common practices though, they are time-consuming and cumbersome because 1) the testing speed is limited by the hardware speed of SSDs and 2) just reproducing bugs can be challenging, let alone locating and root causing the bugs. This work presents virtual stress testing (VST), a simulation framework to enable executing SSD FTLs on PCs or servers against virtual SRAM, DRAM, and flash emulated by host-side main memory. FTL function calls, such as moving data from flash to DRAM, are served by the VST framework. Therefore, VST can test FTLs without SSD hardware requirements nor SSD speed limitations, and root causing bugs becomes manageable tasks. We apply VST to representative SSD design, OpenSSD, which is actively utilized and maintained by SSD and FTL communities. Experimental results show that VST can test FTLs at a speed up to 375 GB/s, which is several hundred times faster than directly testing FTLs on SSD hardware. Moreover, we successfully discover seven new FTL bugs in the OpenSSD design using VST, which is a solid evidence of VST's bug-discovering effectiveness.<br/> &copy; 2017 IEEE.},
key = {Flash-based SSDs},
keywords = {Computer aided design;Computer hardware;Computer software;Data storage equipment;Digital storage;Dynamic random access storage;Embedded software;Embedded systems;Firmware;Flash memory;Hardware;Integrated circuit design;Program debugging;Software testing;Static random access storage;},
note = {Common practices;Data storage systems;Disk drive;Flash translation layer;Function calls;Simulation framework;Software debugging;Systems simulation;},
URL = {http://dx.doi.org/10.1109/ICCAD.2017.8203790},
} 


@inproceedings{20133516681315,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {The design of comprehensive performance test-bed of automobile electric power steering system},
journal = {Applied Mechanics and Materials},
author = {He, Ze Gang and Tai, Xiao Hong and Shen, Rong Wei and Han, Jiong Gang},
volume = {333-335},
year = {2013},
pages = {2301 - 2304},
issn = {16609336},
address = {Guilin, China},
abstract = {A kind of comprehensive performance test-bed of automobile electric power steering system was designed. IPC was applied to the main control system. Testing software was developed based on Visual Basic. AC servo system was assembled to respectively simulate input torque and load torque, the manual input torque can also be realized by operating steering wheel. The motion control card MPC08 is used to control the motion of Servo motor. Test data is collected by using multi-function data collection card. The lifting gears were assembled to install input/output shaft servo motor and EPS. Test results show that the test-bed can verify the control strategies and accurately detect the assist characteristic of EPS. &copy; (2013) Trans Tech Publications, Switzerland.},
key = {Software testing},
keywords = {AC generator motors;Servomechanisms;Visual BASIC;},
note = {AC servo systems;Assist characteristic;Automobile electric;Comprehensive performance;Data collection card;Designed;Electric power steering system;Motion control card;},
URL = {http://dx.doi.org/10.4028/www.scientific.net/AMM.333-335.2301},
} 


@article{20072410652855,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Research on the load testing system based on CORBA and its implementation},
journal = {Shanghai Ligong Daxue Xuebao/Journal of University of Shanghai for Science and Technology},
author = {Hu, Min and Yang, Wei-Min and Lin, Chun-Xiao},
volume = {29},
number = {2},
year = {2007},
pages = {189 - 194},
issn = {10076735},
abstract = {The load testing system based on CDRBA is described, and the constitution, structure, and module design of the system as well as some related key techniques are discussed. The application of the system will improve the efficiency of the test of the software under distributed calculating environment, so as to guarantee the software quality.},
} 


@inproceedings{20174804450705,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Comparative analysis of automated load testing tools: Apache JMeter, Microsoft Visual Studio (TFS), LoadRunner, Siege},
journal = {International Conference on Communication Technologies, ComTech 2017},
author = {Abbas, Rabiya and Sultan, Zainab and Bhatti, Shahid Nazir},
year = {2017},
pages = {39 - 44},
address = {Rawalpindi, Pakistan},
abstract = {Software testing is the process of testing, verifying and validating the user's requirements. During whole software development, testing is an ongoing process. Black Box, White Box testing and grey box testing are the three main types of software testing. In Black box testing, user doesn't know intrinsic logics and design of system. In white box testing, Tester knows the intrinsic logic of code. In Grey box testing, Tester has little bit knowledge about the internal structure, code and working of the system. It is commonly used in case of Integration testing. Load testing is the type of testing which helps us to analyze the performance of the system under heavy load or under Zero load. With the help of a automated load Testing Tools, we can do it in better way. The intention for writing this research is to carry out a comparison of four automated load testing tools i.e. Apache JMeter, HP LoadRunner, Microsoft Visual Studio (TFS), Siege based on certain criteria i.e. test scripts generation, plug-in support, result reports, application support and cost. The main focus is to study and analyze these load testing tools and identify which tool is best and more efficient [10]. We assume this comparative analysis can help in selecting the most appropriate tool and motivates the use of open source load testing tools.<br/> &copy; 2017 IEEE.},
key = {Black-box testing},
keywords = {Automation;Integration testing;Load testing;Open source software;Software design;Software engineering;Software testing;Studios;Testing;},
note = {Automated testing;Comparative analysis;Grey-box testing;Internal structure;Manual testing;Stress test;Testing tools;White-box testing;},
URL = {http://dx.doi.org/10.1109/COMTECH.2017.8065747},
} 


@inproceedings{20141817656858,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A performance testing and optimization tool for system developed by python language},
journal = {IET Conference Publications},
author = {Fan, Haojie and Mu, Yongmin},
volume = {2013},
number = {637 CP},
year = {2013},
pages = {24 - 27},
address = {Beijing, China},
abstract = {With a wide range of Python language in developing programs, More and more programmers choose to use the Python language for systems development, it gradually becomes scientific computing, web and games' Choice Awards. However, the performance of python is always a headache for developers. For reasonable selection of functions in base library, the usage of third-party plug-ins functions and methods, and the design of custom functions, the problem whether they are the best choices for general developers is difficult to make a positive answer. After the systems performance bottleneck occurs, it is particularly important to determine where to tune and how to tune. Through the analysis and dynamic tracking of source code, with the built-in method in Python, we can get information about the system to be optimized, included: functions, grammatical structures, running time of each function, the relationship between function calls etc. This information provides an effective basis for further optimization of the system. Experimental results show that the system optimized by the tool has a significantly improvement.<br/>},
key = {Computer software},
keywords = {Computer games;Computers;High level languages;},
note = {Developing projects;Grammatical structure;Optimization tools;Performance testing;Python;System optimizations;Systems development;Systems performance;},
URL = {http://dx.doi.org/10.1049/cp.2013.2086},
} 


@inproceedings{20103713223214,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Load testing and performance monitoring tools in use with AJAX based web applications},
journal = {MIPRO 2010 - 33rd International Convention on Information and Communication Technology, Electronics and Microelectronics, Proceedings},
author = {Krizanic, J. and Grguric, A. and Momondor, M. and Lazarevski, P.},
year = {2010},
pages = {428 - 434},
address = {Opatija, Croatia},
abstract = {In order to deliver quality assured software and avoid potential costs caused by unstable software, software testing is essential in software lifecycle. Load testing is one of the testing types with high importance. It is usually accompanied by performance monitoring of the hosting environment. In the case of web applications which are today widely used, one fact is obvious: most of web applications are public and used by vast number of users, which are making a considerable traffic load on hosting environments and web applications. Load testing and performance monitoring become facilitated with existing tools aimed for load testing and performance monitoring. In the paper we analyze and compare several existing tools which facilitate load testing and performance monitoring, in order to find the most appropriate tools by criteria such as ease of use, supported features, and license. Selected tools were put in action in the real environment, through several web applications. For the case study one of the web applications is used in order to introduce different capabilities of tools, including distributed testing, assembling of test scenario from previously recorded usage scenarios, security support, results analysis, monitoring of key parameters, and reporting and alerting about changes of these parameters.<br/>},
key = {Load testing},
keywords = {Microelectronics;Monitoring;Software testing;},
note = {AJAX;Distributed testing;Performance monitoring;Real environments;Security support;Software life cycles;Usage scenarios;WEB application;},
} 


@inproceedings{20171603585111,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Directed automated memory performance testing},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
author = {Chattopadhyay, Sudipta},
volume = {10206 LNCS},
year = {2017},
pages = {38 - 55},
issn = {03029743},
address = {Uppsala, Sweden},
abstract = {Understanding software non-functional properties (e.g. time, energy and security) requires deep understanding of the execution platform. The design of caches plays a crucial role in impacting software performance (for low latency of caches) and software security (for cache being used as a side channel). We present CATAPULT, a novel test generation framework to systematically explore the cache behaviour of an arbitrary program. Our framework leverages dynamic symbolic execution and satisfiability modulo theory (SMT) solvers for generating test inputs. We show the application of CATAPULT in testing timing-related properties and testing cache side-channel vulnerabilities in several open-source programs, including applications from OpenSSL and Linux GDK libraries. &copy; Springer-Verlag GmbH Germany 2017.},
key = {Software testing},
keywords = {Application programs;Computer operating systems;Open source software;},
note = {Dynamic symbolic executions;Execution platforms;Memory performance;Non functional properties;Open source projects;Satisfiability modulo Theories;Software performance;Software security;},
URL = {http://dx.doi.org/10.1007/978-3-662-54580-5_3},
} 


@inproceedings{20112714122900,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Model-based performance testing (NIER track)},
journal = {Proceedings - International Conference on Software Engineering},
author = {Barna, Cornel and Litoiu, Marin and Ghanbari, Hamoun},
year = {2011},
pages = {872 - 875},
issn = {02705257},
abstract = {In this paper, we present a method for performance testing of transactional systems. The methods models the system under test, finds the software and hardware bottlenecks and generate the workloads that saturate them. The framework is adaptive, the model and workloads are determined during the performance test execution by measuring the system performance, fitting a performance model and by analytically computing the number and mix of users that will saturate the bottlenecks. We model the software system using a two layers queuing model and use analytical techniques to find the workload mixes that change the bottlenecks in the system. Those workload mixes become stress vectors and initial starting points for the stress test cases. The rest of test cases are generated based on a feedback loop that drives the software system towards the worst case behaviour. &copy; 2011 ACM.<br/>},
key = {Software testing},
keywords = {Adaptive systems;Queueing theory;},
note = {Performance Model;Performance testing;Performance tests;Software and hardwares;Software systems;Stress Testing;System under test;Transactional systems;},
URL = {http://dx.doi.org/10.1145/1985793.1985930},
} 


@inproceedings{20120714762022,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Synthesizable verification IP to stress test system-on-chip emulation and prototyping platforms},
journal = {2011 International Symposium on Integrated Circuits, ISIC 2011},
author = {Shankar, Subramanian Shiva and Shankar, Jayaratnam Siva},
year = {2011},
pages = {609 - 612},
address = {SingaporeSingapore, Singapore},
abstract = {One of the biggest challenges today with Pre-silicon System-on-Chip verification is to stress out the SoC to uncover as many corner case design issues by injecting heavy real time data traffic into the system. The inherent efficiency and the performance of the Emulation and FPGA prototyping systems make them the ideal platforms to run these tests. A typical solution is to inject data traffic through protocol exercisers with proprietary hardware (vendor specific slow down solutions) which can bridge the emulated DUT with a real time device or use software API's with transaction based SCE-MI communication infrastructure. The need for a complex input output interface makes the former difficult to be used with all emulators / FPGA prototyping systems while SCE-MI communication infrastructure being protocol specific is a disadvantage. So, a synthesizable verification architecture compliant with SCE-MI 2.0 infrastructure through which the protocol specific traffic is injected through industry standard interfaces. i.e. PIPE (PCIe), UTMI (USB), MII (Ethernet) based on user configured stimuli has been designed and implemented. Being synthesizable, the verification environment can run in both emulation and prototyping platforms effectively stress testing the complete system. &copy; 2011 IEEE.<br/>},
key = {System-on-chip},
keywords = {Application specific integrated circuits;Design for testability;Network architecture;Pipe;Programmable logic controllers;},
note = {Communication infrastructure;FPGA prototyping;Industry standards;Prototyping platform;Prototyping systems;Stress Testing;UTMI;Verification environment;},
URL = {http://dx.doi.org/10.1109/ISICir.2011.6131936},
} 


@inproceedings{20124315601080,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Modeling and analysis of CPU usage in safety-critical embedded systems to support stress testing},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
author = {Nejati, Shiva and Di Alesio, Stefano and Sabetzadeh, Mehrdad and Briand, Lionel},
volume = {7590 LNCS},
year = {2012},
pages = {759 - 775},
issn = {03029743},
address = {Innsbruck, Austria},
abstract = {Software safety certification needs to address non-functional constraints with safety implications, e.g., deadlines, throughput, and CPU and memory usage. In this paper, we focus on CPU usage constraints and provide a framework to support the derivation of test cases that maximize the chances of violating CPU usage requirements. We develop a conceptual model specifying the generic abstractions required for analyzing CPU usage and provide a mapping between these abstractions and UML/MARTE. Using this model, we formulate CPU usage analysis as a constraint optimization problem and provide an implementation of our approach in a state-of-the-art optimization tool. We report an application of our approach to a case study from the maritime and energy domain. Through this case study, we argue that our approach (1) can be applied with a practically reasonable overhead in an industrial setting, and (2) is effective for identifying test cases that maximize CPU usage. &copy; 2012 Springer-Verlag.<br/>},
key = {Safety engineering},
keywords = {Abstracting;Computer software selection and evaluation;Constrained optimization;Embedded systems;Safety testing;},
note = {Conceptual model;Constraint optimization problems;Industrial settings;Model and analysis;Optimization tools;Safety-critical embedded systems;Software safety;State of the art;},
URL = {http://dx.doi.org/10.1007/978-3-642-33666-9_48},
} 


@inproceedings{20164102888346,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {A search based approach for stress-testing integrated circuits},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
author = {Eljuse, Basil and Walkinshaw, Neil},
volume = {9962 LNCS},
year = {2016},
pages = {80 - 95},
issn = {03029743},
address = {Raleigh, NC, United states},
abstract = {In order to reduce software complexity and be power efficient, hardware platforms are increasingly incorporating functionality that was traditionally administered at a software-level (such as cache management). This functionality is often complex, incorporating multiple processors along with a multitude of design parameters. Such devices can only be reliably tested at a &lsquo;system&rsquo; level, which presents various testing challenges; behaviour is often non-deterministic (from a software perspective), and finding suitable test sets to &lsquo;stress&rsquo; the system adequately is often an inefficient, manual activity that yields fixed test sets that can rarely be reused. In this paper we investigate this problem with respect to ARM&rsquo;s Cache Coherent Interconnect (CCI) Unit. We present an automated search-based testing approach that combines a parameterised testgeneration framework with the hill-climbing heuristic to find test sets that maximally &lsquo;stress&rsquo; the CCI by producingmuch larger numbers of data stall cycles than the corresponding manual test sets. &copy; Springer International Publishing AG 2016.},
key = {Software testing},
keywords = {Integrated circuit interconnects;Integrated circuits;Reconfigurable hardware;Software engineering;},
note = {Automated searches;Cache coherent interconnect;Cache management;Design parameters;Hardware platform;Multiple processors;Software complexity;Stress Testing;},
URL = {http://dx.doi.org/10.1007/978-3-319-47106-8_6},
} 


@inproceedings{20105013472951,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Practical end-to-end performance testing tool for high speed 3G-based networks},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
author = {Shinbo, Hiroyuki and Tagami, Atsushi and Ano, Shigehiro and Hasegawa, Toru and Suzuki, Kenji},
volume = {6435 LNCS},
year = {2010},
pages = {205 - 220},
issn = {03029743},
abstract = {High speed IP communication is a killer application for 3rd generation (3G) mobile systems. Thus 3G network operators should perform extensive tests to check whether expected end-to-end performances are provided to customers under various environments. An important objective of such tests is to check whether network nodes fulfill requirements to durations of processing packets because a long duration of such processing causes performance degradation. This requires testers (persons who do tests) to precisely know how long a packet is hold by various network nodes. Without any tool's help, this task is time-consuming and error prone. Thus we propose a multi-point packet header analysis tool which extracts and records packet headers with synchronized timestamps at multiple observation points. Such recorded packet headers enable testers to calculate such holding durations. The notable feature of this tool is that it is implemented on off-the shelf hardware platforms, i.e., lap-top personal computers. The key challenges of the implementation are precise clock synchronization without any special hardware and a sophisticated header extraction algorithm without any drop. &copy; 2010 IFIP International Federation for Information Processing.<br/>},
key = {3G mobile communication systems},
keywords = {Computer hardware;Hardware;Mechanical clocks;Personal computers;Software testing;Synchronization;Technology transfer;},
note = {Clock Synchronization;End-to-end performance;Header extraction;IP communications;Killer-application;Off-the-shelf hardwares;Packet header;Performance degradation;},
URL = {http://dx.doi.org/10.1007/978-3-642-16573-3_15},
} 


@inproceedings{20151600754435,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Research on performance test method of lane departure warning system with PreScan},
journal = {Lecture Notes in Electrical Engineering},
author = {Zhang, Qiang and Chen, Daxing and Li, Yusheng and Li, Keqiang},
volume = {328},
year = {2015},
pages = {445 - 453},
issn = {18761100},
address = {Opole, Poland},
abstract = {A performance test method of lane departure warning system (LDWS) with PreScan software is proposed. In the process of virtual integration, the LDWS camera is located in the front of a computer monitor displaying virtual environment so as to capture pictures including lane marks and other information. Vehicle dynamic model and maneuver model run on a real-time computer, which represents a virtual vehicle and communicates with LDWS controller with CAN bus. The results show that the method will make it easier to create various test scenarios, which can save time and cost by transferring complex testing catalogues to the laboratory. The dangers presented in vehicle experiments in some critical scenarios can also be reduced. The repeatable model-based method makes it more convenient to locate the problem, which would make it easier to compare and assess the performance of LDWS produced by different companies objectively.<br/> &copy; Springer-Verlag Berlin Heidelberg 2015.},
key = {Software testing},
keywords = {Testing;Vehicles;Virtual reality;},
note = {Lane-departure-warning systems;Model-based method;Real time simulations;Real-time computer;Test scenario;Vehicle dynamic model;Vehicle experiment;Virtual integration;},
URL = {http://dx.doi.org/10.1007/978-3-662-45043-7_45},
} 


@article{1996363246637,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Deriving workloads for performance testing},
journal = {Software - Practice and Experience},
author = {Avritzer, Alberto and Weyuker, Elaine J.},
volume = {26},
number = {6},
year = {1996},
pages = {613 - 633},
issn = {00380644},
abstract = {An approach is presented to compare the performance of an existing production platform and a proposed replacement architecture. The traditional approach to such a comparison is to develop software for the proposed platform, build the new architecture, and collect performance measurements on both the existing system in production and the new system in the development environment. In this paper we propose a new way to design an application-independent workload for doing such a performance evaluation. We demonstrate the applicability of our approach by describing our experience using it to help an industrial organization determine whether or not a proposed architecture would be adequate to meet their organization's performance requirements.},
key = {Computer software},
keywords = {Computer architecture;Computer software portability;Performance;Software engineering;},
note = {Benchmark tuning;Performance testing;Workloads;},
URL = {http://dx.doi.org/10.1002/(SICI)1097-024X(199606)26:6<613::AID-SPE23>3.0.CO;2-5},
} 


@article{20130415938517,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Challenges on amazon cloud in load balancing, performance testing and upgrading},
journal = {Advances in Intelligent Systems and Computing},
author = {Shah, Himanshu and Wankhede, Paresh and Borkar, Anup},
volume = {203},
year = {2013},
pages = {31 - 40},
issn = {21945357},
abstract = {Web application hosting in a data centre is clouded with quite a few issues ranging from hardware provisioning, software installation and maintaining the servers. Traditional data-centre techniques need production grade hardware to test application's behavior/performance under expected peak load. This could be costly and procuring hardware could be very time consuming causing delays in software delivery. Cloud (Infrastructure-as-a- Service) can be an answer to this. Cloud Computing provides production grade server instances at very cheap rates. This whitepaper is divided into two sub parts: first part details out the typical web application setup on Amazon Web Services cloud (AWS) [Ref 2], challenges faced during the setup and resolution for the same, while the second part talks about the observations made during load testing using Apache JMeter performance testing tool on AWS cloud. Three different application setup topologies (single tier, two tier and three tier) are tested and findings and learning from it are discussed here. This whitepaper only highlights the pitfalls encountered and possible resolutions for each and is not a comment on performance of Amazon cloud. The whitepaper endeavors to find out the best architecture which would give maximum return on investment. &copy; Springer-Verlag Berlin Heidelberg 2013.},
key = {Computer hardware},
keywords = {Hardware;Profitability;Web services;},
note = {Amazon web services;Data centres;Peak load;Performance testing;Return on investments;Software installations;Test applications;WEB application;},
URL = {http://dx.doi.org/10.1007/978-3-642-35461-8},
} 


@article{20172803930321,
language = {Chinese},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Design and performance testing of production performance determination system for boar},
journal = {Nongye Gongcheng Xuebao/Transactions of the Chinese Society of Agricultural Engineering},
author = {Xiong, Benhai and Jiang, Linshu and Yang, Liang and Pan, Xiaohua},
volume = {33},
number = {9},
year = {2017},
pages = {174 - 179},
issn = {10026819},
abstract = {In order to monitor feeding behavior of sows and further attain the sow's precise feeding, an intelligent production performance testing system was designed in this study, which played functions in sows' automatic identification, body weight perception, automatic feeding data acquisition and data analysis simultaneously. The system was composed of electric ear tag identification module, precise feed flow control module, feed trough and boar weighing module, data communication and remote control module. The mechanical device system was constituted of feeding bin, brackets, railing and blocking apron. The mechanical device system was constituted of feeder's vertical wall, weighting platform, flapper, feed loading device, feed bin, control box, switch of discharge and ear tag recognizer. Electronic control systems included microprocessor (LPC1766, ARM Cortex-M3, Working temperature -40-105&#8451;, Operating voltage 2.0-3.6 V, flash 256 K, low power consumption et al.), RS232 reader port, data storage chip (the default storage capacity is 256 KB), circuit of watchdog, weighing circuit, exterior-drivers circuit, JTAG connector circuit and stabilivolt source circuit. Among above, the sensor used for pigs weighing was Delux ADS1232 which had 2 rate options, 10 times per second and 80 times per second, with high precision and large range of features. The performance testing experiment revealed that: 1) the system's precision meets the monitoring requirement of sow production performance. The discharge rate of feeder depended on the level of feed in stock bin, and the average amount of unloading feed was 93&plusmn;2 g at one time; the range of pig weighing was 0-200 kg with the precision error below 10 g, and the dynamic weighing error was below 0.5% of pig's weight. 2) The feeding behavior monitor for 40 gilts (25-60 kg) showed that the frequency of free feed intake was 10-12 times per day, the average feed time was 78 min, the feed conversion ratio was 2.33:1, and their weight gain was converged to the Gompertz curves (e.g. W<inf>t</inf>=172.1exp(-4.0187exp(-0.0122*t)), W<inf>t</inf>means body weight, kg; t means day old, day), the predicted decreasing daily weight gain of growing pigs by Gompertz curve occurred at day 111-117, with corresponding inflection point weight in the range of 63-64 kg. The observed and predicted results above could precisely determine the growth performance, indicating that the software systems and hardware devices could satisfy the requirement of growth performance determination in sows. 3) The wiper motor rather than early stepping motor was used in feed discharging control system, which reduced the cost of production. In addition, the combined wiper motor with cylindrical scraper structure decreased the discharge rate of feeder and improved the precision of unloading control system. 4) The core chip in control system was imported, multi-redundant, and protection systems were applied in circuit design. Multiply functional verification was adopted in software writing. The redundancy design in software and hardware eliminated the interference of power, electrical machine and electromagnetic wave, and improved the systems' reliability and stability. 5) The collected data could be saved or transferred, which facilitates the accumulation of pig production, data mining and sow breeding. &copy; 2017, Editorial Department of the Transactions of the Chinese Society of Agricultural Engineering. All right reserved.},
key = {Identification (control systems)},
keywords = {Anthropometry;Automation;Bins;Control systems;Data acquisition;Digital storage;Electric discharges;Electromagnetic waves;Feeding;Hardware;Integrated circuit manufacture;Mammals;Models;Printed circuit design;Redundancy;Software reliability;Software testing;Unloading;Verification;Weighing;},
note = {Automatic identification;Boar;Data collection;Electronic control systems;Functional verification;Performance measurements;Production performance;Reliability and stability;},
URL = {http://dx.doi.org/10.11975/j.issn.1002-6819.2017.09.022},
} 


@inproceedings{1998094000254,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Simplifying motor performance testing in the production environment},
journal = {Proceedings of the Electrical/Electronics Insulation Conference},
author = {Leonard, Donald C.},
year = {1997},
pages = {185 - 190},
issn = {03622479},
address = {Rosemont, IL, USA},
abstract = {The objective of this paper is to illustrate how performance test systems on the factory floor can be enhanced by utilizing the power and speed of integral computer hardware and software to automate and simplify tasks typically performed in the production environment. The first part of this paper discusses why the test system is needed to perform additional tasks. The second section defines the relationships between various departments within the organization, and the test system. The third section discusses the benefits of integrating additional functions into the test system. The final sections of the paper discusses incorporating artificial intelligence and networking to simplify tasks associated with the production environment.},
key = {Electric motors},
keywords = {Artificial intelligence;Automatic testing;Computer hardware;Computer integrated manufacturing;Computer software;Decision making;Factory automation;Performance;},
note = {Factory floor;Performance testing;},
} 


@inproceedings{20140917393351,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2018 Elsevier Inc.},
copyright = {Compendex},
title = {Static analysis driven cache performance testing},
journal = {Proceedings - Real-Time Systems Symposium},
author = {Banerjee, Abhijeet and Chattopadhyay, Sudipta and Roychoudhury, Abhik},
year = {2013},
pages = {319 - 329},
issn = {10528725},
address = {Vancouver, BC, Canada},
abstract = {Real-time, embedded software are constrained by several non-functional requirements, such as timing. With the ever increasing performance gap between the processor and the main memory, the performance of memory subsystems often pose a significant bottleneck in achieving the desired performance for a real-time, embedded software. Cache memory plays a key role in reducing the performance gap between a processor and main memory. Therefore, analyzing the cache behaviour of a program is critical for validating the performance of an embedded software. In this paper, we propose a novel approach to automatically generate test inputs that expose the cache performance issues to the developer. Each such test scenario points to the specific parts of a program that exhibit anomalous cache behaviour along with a set of test inputs that lead to such undesirable cache behaviour. We build a framework that leverages the concepts of both static cache analysis and dynamic test generation to systematically compute the cache-performance stressing test inputs. Our framework computes a test-suite which does not contain any false positives. This means that each element in the test-suite points to a real cache performance issue. Moreover, our test generation framework provides an assurance of the test coverage via a well-formed coverage metric. We have implemented our entire framework using Chronos worst case execution time (WCET) analyzer and LLVM compiler infrastructure. Several experiments suggest that our test generation framework quickly converges towards generating cache-performance stressing test cases. We also show the application of our generated test-suite in design space exploration and cache performance optimization. &copy; 2013 IEEE.<br/>},
key = {Software testing},
keywords = {Cache memory;Embedded software;Interactive computer systems;Program compilers;Real time systems;Static analysis;},
note = {Cache performance;Design space exploration;Memory subsystems;Non-functional requirements;Performance testing;Static cache analysis;Test generations;Worst-case execution time;},
URL = {http://dx.doi.org/10.1109/RTSS.2013.39},
} 



